<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on the stupidest thing...</title>
    <link>/categories/programming/</link>
    <description>Recent content in Programming on the stupidest thing...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>The text in this work is licensed under CC-BY-4.0, https://creativecommons.org/licenses/by/4.0/legalcode; code licensed under the MIT License</copyright>
    <lastBuildDate>Thu, 11 May 2017 16:22:00 -0500</lastBuildDate>
    <atom:link href="/categories/programming/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>updating d3panels and R/qtlcharts for D3 version 4</title>
      <link>/2017/05/11/updating-d3panels-and-r/qtlcharts-for-d3-version-4/</link>
      <pubDate>Thu, 11 May 2017 16:22:00 -0500</pubDate>
      
      <guid>/2017/05/11/updating-d3panels-and-r/qtlcharts-for-d3-version-4/</guid>
      <description>&lt;p&gt;I just spent some time updating my &lt;a href=&#34;http://kbroman.org/d3panels&#34;&gt;d3panels&lt;/a&gt; library and &lt;a href=&#34;http://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt; package for &lt;a href=&#34;https://d3js.org&#34;&gt;D3&lt;/a&gt; &lt;a href=&#34;https://github.com/d3/d3/blob/master/API.md&#34;&gt;version 4&lt;/a&gt;. It took just about a day, and the majority of the time was spent puzzling over &lt;a href=&#34;https://github.com/d3/d3/blob/master/API.md#forces-d3-force&#34;&gt;d3-force&lt;/a&gt; and &lt;a href=&#34;https://github.com/d3/d3/blob/master/API.md#brushes-d3-brush&#34;&gt;d3-brush&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(Note that I just barely know what I’m doing, by which I mean I &lt;em&gt;don’t&lt;/em&gt; know what I’m doing. I’m able to get things to work, but I don’t always know why.)&lt;/p&gt;
&lt;p&gt;I was very glad that I’d written a bunch of tests, because I could use those to figure out what was working and what was not working, and whether my changes were effective. &lt;em&gt;Tests, test, tests.&lt;/em&gt; There’s nothing better than tests for this sort of refactoring business.&lt;/p&gt;
&lt;p&gt;I like the changes in D3 version 4, but trying to figure them out feels a bit like being back in 2012, when I was first trying to understand D3: I’ve not found many tutorials that explain how to use the new version, so I mostly focused on reading the &lt;a href=&#34;https://github.com/d3/d3/blob/master/API.md&#34;&gt;API documentation&lt;/a&gt;, which isn’t easy for me to understand, or to walk through the code for some of [Michael Bostock]’s &lt;a href=&#34;https://bl.ocks.org/mbostock&#34;&gt;examples&lt;/a&gt;. There are loads of books and tutorials on D3, but they’re almost all still talking about D3 version 3. (This will change shortly. For example, the 2nd edition of &lt;a href=&#34;http://alignedleft.com/&#34;&gt;Scott Murray&lt;/a&gt;’s excellent &lt;a href=&#34;http://shop.oreilly.com/product/0636920037316.do&#34;&gt;Interactive Data Visualization for the Web&lt;/a&gt; is at the printer, and covers D3 version 4.)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ireneros.com/&#34;&gt;Irene Ros&lt;/a&gt;’s &lt;a href=&#34;https://iros.github.io/d3-v4-whats-new/#1&#34;&gt;slides on what’s new in D3 V4&lt;/a&gt; were super helpful. (Also I just saw &lt;a href=&#34;http://www.puzzlr.org/sample-page/&#34;&gt;Tom Roth&lt;/a&gt;’s nice &lt;a href=&#34;http://www.puzzlr.org/force-graphs-with-d3/&#34;&gt;tutorial on d3-force&lt;/a&gt;, linked on the &lt;a href=&#34;https://github.com/d3/d3/wiki/Tutorials&#34;&gt;D3 tutorials page&lt;/a&gt;; duh.)&lt;/p&gt;
&lt;p&gt;My D3 code isn’t particularly fancy. (And note that I’m still writing in &lt;a href=&#34;http://coffeescript.org&#34;&gt;CoffeeScript&lt;/a&gt;; I toyed with the idea of switching to &lt;a href=&#34;https://www.ecma-international.org/ecma-262/6.0/&#34;&gt;ES6&lt;/a&gt;, particularly because we can now use &lt;code&gt;(d) =&amp;gt; d.x&lt;/code&gt;. But I love CoffeeScript and don’t want to lose list comprehensions, and actually my favorite thing is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;some_option = chartOpts?.some_option ? the_default&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I do fight with the indentation at times, but I’ve grown accustomed to it.&lt;/p&gt;
&lt;p&gt;Anyway, back to the point of this: what did I have to change to get &lt;a href=&#34;http://kbroman.org/d3panels&#34;&gt;d3panels&lt;/a&gt; and &lt;a href=&#34;https://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt; to work with D3 version 4?&lt;/p&gt;
&lt;div id=&#34;simple-replacements&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Simple replacements&lt;/h2&gt;
&lt;p&gt;The bulk of the changes were simple replacements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d3.scale.linear()&lt;/code&gt; → &lt;code&gt;d3.scaleLinear()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d3.svg.line()&lt;/code&gt; → &lt;code&gt;d3.line()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d3.scale.category20().range()&lt;/code&gt; → &lt;code&gt;d3.schemeCategory20&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d3.random.normal(10,3)&lt;/code&gt; → &lt;code&gt;d3.randomNormal(10,3)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slightly more tricky: &lt;code&gt;d3.scale.ordinal().rangeBands([0,w],0,0)&lt;/code&gt; became &lt;code&gt;d3.scaleBand().range([0,w])&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Also, I had written (well, borrowed from somewhere) methods &lt;code&gt;.moveToFront()&lt;/code&gt; and &lt;code&gt;.moveToBack()&lt;/code&gt;, which I can omit as D3 version 4 has &lt;code&gt;.raise()&lt;/code&gt; and &lt;code&gt;.lower()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So really, the majority of the changes were made by for &lt;code&gt;d3.&lt;/code&gt;, making some tiny edit, and then seeing if my tests were working.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;d3-force&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/d3/d3/blob/master/API.md#forces-d3-force&#34;&gt;d3-force&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My D3 code is rather primitive. I’m basically just drawing and then adding some &lt;code&gt;.on(&amp;quot;mouseover&amp;quot;, something)&lt;/code&gt; or &lt;code&gt;.on(&amp;quot;click&amp;quot;, something_else)&lt;/code&gt; for interactivity.&lt;/p&gt;
&lt;p&gt;But force-directed graphics are pretty awesome, particularly for &lt;a href=&#34;http://www.cbs.dtu.dk/~eklund/beeswarm/&#34;&gt;beeswarm&lt;/a&gt;-type plots, so I did make use of &lt;code&gt;d3.layout.force&lt;/code&gt; in two places.&lt;/p&gt;
&lt;p&gt;But I didn’t really know what I was doing before, and that made the change to &lt;code&gt;d3.forceSimulation&lt;/code&gt; a bit more puzzling. My &lt;a href=&#34;https://github.com/kbroman/d3panels/blob/1.1.4/src/dotchart.coffee#L181-L246&#34;&gt;code implementing a beeswarm-type dot chart&lt;/a&gt; is really ugly and so not worth looking at or discussing. The &lt;a href=&#34;https://github.com/kbroman/d3panels/blob/master/src/dotchart.coffee#L181-L201&#34;&gt;new version&lt;/a&gt; is just 21 lines (vs 65 lines before), and way easier to read.&lt;/p&gt;
&lt;p&gt;For &lt;a href=&#34;http://kbroman.org/d3panels/assets/test/dotchart/&#34;&gt;&lt;code&gt;d3panels.dotchart&lt;/code&gt;&lt;/a&gt;, the main bit looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;d3.range(scaledPoints.length).map( (i) -&amp;gt;
    scaledPoints[i].fy = scaledPoints[i].y)

force = d3.forceSimulation(scaledPoints)
      .force(&amp;quot;x&amp;quot;, d3.forceX((d) -&amp;gt; d.x))
      .force(&amp;quot;collide&amp;quot;, d3.forceCollide(pointsize*1.1))
      .on(&amp;quot;tick&amp;quot;, ticked)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have a data set &lt;code&gt;scaledPoints&lt;/code&gt; which is an array of objects with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values for point locations. I add &lt;code&gt;.fy&lt;/code&gt; to each element of the array, to prevent the &lt;code&gt;y&lt;/code&gt; values from being changed. (This is a beeswarm-type chart where the x-axis is a category, and I want those values to be dynamically adjusted using &lt;em&gt;the force&lt;/em&gt;, but the y-axis is the quantitative value, and I don’t want those values to change.)&lt;/p&gt;
&lt;p&gt;Next I use &lt;code&gt;d3.forceSimulation&lt;/code&gt;, pass in my data, and then add a force that makes the points want to go towards their x value another another force that makes them not collide with each other.&lt;/p&gt;
&lt;p&gt;Finally, I have the &lt;code&gt;ticked&lt;/code&gt; function that does the updating of the point locations.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ticked = () -&amp;gt;
    points.attr(&amp;quot;cx&amp;quot;, (d) -&amp;gt; d.x)
          .attr(&amp;quot;cy&amp;quot;, (d) -&amp;gt; d.y)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And that’s that. There’s a bit more code since I want the option of having the opposite orientation, with the categories on the y-axis and the quantitative values on the x-axis, but really it’s just those 9 lines of code plus a couple of blank lines.&lt;/p&gt;
&lt;p&gt;It was hard work figuring them out, but only because I was spending too much time hacking away without understanding, rather than trying to come to some understanding before doing any hacking.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;d3-brush&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;a href=&#34;https://github.com/d3/d3/blob/master/API.md#brushes-d3-brush&#34;&gt;d3-brush&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The last major thing I had to figure out was d3-brush. I’ve not implemented any actual brushing in either &lt;a href=&#34;http://kbroman.org/d3panels&#34;&gt;d3panels&lt;/a&gt; or &lt;a href=&#34;http://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt;, but I did use &lt;code&gt;d3.svg.brush&lt;/code&gt; in one my tests of &lt;a href=&#34;http://kbroman.org/d3panels/assets/test/scatterplot/&#34;&gt;&lt;code&gt;d3panels.scatterplot&lt;/code&gt;&lt;/a&gt;, to show that it could be done.&lt;/p&gt;
&lt;p&gt;In my &lt;a href=&#34;https://github.com/kbroman/d3panels/blob/1.1.4/test/scatterplot/test_scatterplot.coffee#L66-L99&#34;&gt;original brush code&lt;/a&gt;, which was applied for a matrix of three scatterplots, I was creating a separate brush for each of the three scatterplots. And with the old &lt;code&gt;d3.svg.brush()&lt;/code&gt;, you’d pass x- and y-axis scales with &lt;code&gt;.x()&lt;/code&gt; and &lt;code&gt;.y()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You don’t pass scales to the new &lt;code&gt;d3.brush()&lt;/code&gt;. Instead, you use &lt;code&gt;d3.event.selection&lt;/code&gt; to grab the current selection in screen coordinates and then have to convert them back to plot coordinates with your scales’ inverses.&lt;/p&gt;
&lt;p&gt;But I revised my code to what I thought should be working, and which was actually working for the first of the three scatterplots, but I got cryptic errors if I tried to brush the other two scatterplots. And so finally, in the &lt;a href=&#34;https://github.com/kbroman/d3panels/blob/master/test/scatterplot/test_scatterplot.coffee#L66-L102&#34;&gt;revised code&lt;/a&gt;, I decided to use a single brush that was applied across the three scatterplots. (It seems that you &lt;a href=&#34;http://bl.ocks.org/ludwigschubert/0236fa8594c4b02711b2606a8f95f605&#34;&gt;can implement multiple brushes&lt;/a&gt;, but it’s complicated.) The single-brush solution is perfectly fine for my test case, and actually it’s maybe easier to understand.&lt;/p&gt;
&lt;p&gt;So the conversion from &lt;code&gt;d3.svg.brush&lt;/code&gt; to &lt;code&gt;d3.brush&lt;/code&gt; was really pretty easy. I needed to abandon the multiple brushes, and then the back-calculation from screen coordinates to plot coordinates is slightly tedious but not a big deal.&lt;/p&gt;
&lt;p&gt;So that was the last thing, and I now have both &lt;a href=&#34;http://kbroman.org/d3panels&#34;&gt;d3panels&lt;/a&gt; and &lt;a href=&#34;http://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt; working for &lt;a href=&#34;https://d3js.org&#34;&gt;D3&lt;/a&gt; version 4.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;whats-the-point&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What’s the point?&lt;/h2&gt;
&lt;p&gt;The point of all this is that I have ideas for further plots I want to make in &lt;a href=&#34;http://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt;, such as a tool for exploring pleiotropy (that is, whether two traits are affected by a common genetic locus, or instead are each controlled by separate but closely linked loci). For that thing, I wanted a double-slider, and it seemed best to implement it using D3 version 4, &lt;a href=&#34;https://www.biostat.wisc.edu/~kbroman/D3/d3doubleslider/&#34;&gt;which I did&lt;/a&gt;. But I want to use my slider with &lt;a href=&#34;http://kbroman.org/d3panels&#34;&gt;d3panels&lt;/a&gt;, and really I want to incorporate it into &lt;a href=&#34;http://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt;, so it was clear that I needed to spend some time refactoring.&lt;/p&gt;
&lt;p&gt;And actually, I was surprised at how easy it was. (I thought it would be considerably more than a day’s work.) And I feel like I now kind of understand d3-force and d3-brush, so the effort involved was definitely worthwhile.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Write unit tests!</title>
      <link>/2015/12/07/write-unit-tests/</link>
      <pubDate>Mon, 07 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/07/write-unit-tests/</guid>
      <description>&lt;p&gt;Since 2000, I&amp;rsquo;ve been working on &lt;a href=&#34;http://rqtl.org&#34;&gt;R/qtl&lt;/a&gt;, an R package for mapping the genetic loci (called quantitative trait loci, QTL) that contribute to variation in quantitative traits in experimental crosses. The &lt;a href=&#34;https://www.biostat.wisc.edu/~kbroman/publications/rqtl.pdf&#34;&gt;Bioinformatics paper about it&lt;/a&gt; is my most cited; also see my 2014 JORS paper, &amp;ldquo;&lt;a href=&#34;https://www.biostat.wisc.edu/~kbroman/publications/rqtl_14yrs.pdf&#34;&gt;Fourteen years of R/qtl: Just barely sustainable&lt;/a&gt;.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a bit of a miracle that R/qtl works and gives the right answers, as it includes essentially no formal tests. The only regular tests are that the examples in the help files don&amp;rsquo;t produce any errors that halt the code.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve recently been working on &lt;a href=&#34;http://kbroman.org/qtl2&#34;&gt;R/qtl2&lt;/a&gt;, a reimplementation of R/qtl to better handle high-dimensional data and more complex crosses, such as &lt;a href=&#34;http://www.genetics.org/content/190/2/437.short&#34;&gt;Diversity Outbred mice&lt;/a&gt;. In doing so, I&amp;rsquo;m trying to make use of the software engineering principles that I&amp;rsquo;ve learned over the last 15 years, which pretty much correspond to the ideas in &amp;ldquo;&lt;a href=&#34;http://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001745&#34;&gt;Best Practices for Scientific Computing&lt;/a&gt;&amp;rdquo; (&lt;a href=&#34;http://www.third-bit.com/&#34;&gt;Greg Wilson&lt;/a&gt; et al., PLOS Biology 12(1): e1001745, &lt;a href=&#34;http://doi.org/10.1371/journal.pbio.1001745&#34;&gt;doi:10.1371/journal.pbio.1001745&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still working on &amp;ldquo;Make names consistent, distinctive, and meaningful&amp;rdquo;, but I&amp;rsquo;m doing pretty well on writing shorter functions with less repeated code, and &lt;em&gt;particularly importantly&lt;/em&gt; I&amp;rsquo;m writing extensive unit tests.
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;The basic idea is to break up your code into small functions that ideally do just one thing. (These are the &amp;ldquo;units&amp;rdquo;.) And then write tests that explicitly check whether those functions are giving the correct answers. That is, don&amp;rsquo;t just test that the code &lt;em&gt;runs&lt;/em&gt;; you want to know that your code is &lt;em&gt;giving the right answers&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;Last week, I was working on implementing a basic genome scan function. I included the option of doing weighted least squares with known weights, because it&amp;rsquo;s easy enough to do, and R/qtl had done that. (I&amp;rsquo;ve never actually &lt;em&gt;used&lt;/em&gt; that feature, but it&amp;rsquo;s been there.) And my results were matching those that R/qtl provided. Well, mostly: in the case of multiple phenotypes, with some phenotypes having missing values, and when doing a weighted analysis, the results from R/qtl and R/qtl2 were quite different.&lt;/p&gt;

&lt;p&gt;I expect you may be questioning the logic of testing code by comparing it to software that has not been formally tested. I was thinking the same thing. And so I wrote some tests that compared results to those using &lt;a href=&#34;http://www.r-project.org&#34;&gt;R&lt;/a&gt;&amp;rsquo;s &lt;code&gt;lm()&lt;/code&gt; function. And (surprise) the results from &lt;code&gt;lm()&lt;/code&gt; matched R/qtl2 but not R/qtl. So it was R/qtl that was the problem.&lt;/p&gt;

&lt;p&gt;So that had me debugging the &lt;a href=&#34;https://github.com/kbroman/qtl/blob/master/R/scanone.R&#34;&gt;&lt;code&gt;scanone&lt;/code&gt; function in R/qtl&lt;/a&gt;, the R code for which is &lt;strong&gt;831&lt;/strong&gt; lines long and was written according to the principle, &amp;ldquo;I&amp;rsquo;ll just add this one thing and then clean things up later,&amp;rdquo; with &amp;ldquo;later&amp;rdquo; really meaning &amp;ldquo;never&amp;rdquo;, and &amp;ldquo;this one thing&amp;rdquo; really meaning &amp;ldquo;all the things.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;I did, after resorting to a bunch of print/cat statements, &lt;a href=&#34;https://github.com/kbroman/qtl/commit/254a1c728&#34;&gt;find the bug&lt;/a&gt;. In subsetting the data to remove individuals with missing values, I&amp;rsquo;d forgotten to subset the weights. Back in 2012, I&amp;rsquo;d &lt;a href=&#34;https://github.com/kbroman/qtl/commit/a07c575&#34;&gt;fixed a related bug&lt;/a&gt;, but apparently it was only a partial fix. In thinking about the bug again while writing this post, and in looking back at the 2012 bug fix, I realized that I probably had the same bug in &lt;a href=&#34;https://github.com/kbroman/qtl/blob/master/R/scantwo.R&#34;&gt;&lt;code&gt;scantwo&lt;/code&gt;&lt;/a&gt; (which is &lt;strong&gt;1443&lt;/strong&gt; lines long). Sure enough, and so now there&amp;rsquo;s &lt;a href=&#34;https://github.com/kbroman/qtl/commit/c71b3dfce9&#34;&gt;yet another bug fix&lt;/a&gt;, though not yet on &lt;a href=&#34;http://cran.r-project.org&#34;&gt;CRAN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://thebird.nl/&#34;&gt;Pjotr Prins&lt;/a&gt; was the first to encourage me towards software testing. &lt;a href=&#34;http://had.co.nz/&#34;&gt;Hadley Wickham&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/hadley/testthat&#34;&gt;testthat&lt;/a&gt; package makes it easy to do in R packages. In his &lt;a href=&#34;https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf&#34;&gt;paper about testthat&lt;/a&gt;, Hadley wrote:&lt;/p&gt;

&lt;blockquote&gt;It&#39;s not that we don&#39;t test our code, it&#39;s that we don&#39;t store our tests so they can be re-run automatically.
&lt;/blockquote&gt;

&lt;p&gt;This is my favorite comment on testing; it totally applies to (old) me.&lt;/p&gt;

&lt;p&gt;The bottom line:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Write unit tests.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When you find a bug, first write a test for it and then fix the bug.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When you find a bug, look for other possible instances of that bug, and fix them too.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn more about testing in R packages, see the &lt;a href=&#34;http://r-pkgs.had.co.nz/tests.html&#34;&gt;Testing&lt;/a&gt; chapter in Hadley&amp;rsquo;s &lt;a href=&#34;amazon.com/exec/obidos/ASIN/1491910593/7210-20&#34;&gt;R packages book&lt;/a&gt;. Also see the &lt;a href=&#34;http://kbroman.org/Tools4RR/assets/lectures/09_testdebug_withnotes.pdf&#34;&gt;slides for my lecture on testing and debugging&lt;/a&gt; in my &lt;a href=&#34;http://kbroman.org/Tools4RR/&#34;&gt;Tools for Reproducible Research&lt;/a&gt; course.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fitting linear mixed models for QTL mapping</title>
      <link>/2015/11/24/fitting-linear-mixed-models-for-qtl-mapping/</link>
      <pubDate>Tue, 24 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/11/24/fitting-linear-mixed-models-for-qtl-mapping/</guid>
      <description>&lt;p&gt;Linear mixed models (LMMs) have become widely used for dealing with population structure in human GWAS, and they&amp;rsquo;re becoming increasing important for QTL mapping in model organisms, particularly for the analysis of advanced intercross lines (AIL), which often exhibit variation in the relationships among individuals.&lt;/p&gt;

&lt;p&gt;In my efforts on &lt;a href=&#34;http://kbroman.org/qtl2&#34;&gt;R/qtl2&lt;/a&gt;, a reimplementation &lt;a href=&#34;http://rqtl.org&#34;&gt;R/qtl&lt;/a&gt; to better handle high-dimensional data and more complex cross designs, it was clear that I&amp;rsquo;d need to figure out LMMs. But while &lt;a href=&#34;http://www.jstatsoft.org/article/view/v067i01&#34;&gt;papers explaining the fit of LMMs&lt;/a&gt; seem quite explicit and clear, I&amp;rsquo;d never quite turned the corner to actually seeing how I&amp;rsquo;d implement it. In both reading papers and studying code (e.g., &lt;a href=&#34;https://github.com/lme4/lme4/&#34;&gt;lme4&lt;/a&gt;), I&amp;rsquo;d be going along fine and then get completely lost part-way through.&lt;/p&gt;

&lt;p&gt;But I now finally understand LMMs, or at least a particular, simple LMM, and I&amp;rsquo;ve been able to write an implementation: the R package &lt;a href=&#34;http://kbroman.org/lmmlite&#34;&gt;lmmlite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It seemed worthwhile to write down some of the details.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The model I want to fit is &lt;em&gt;y = X b + e&lt;/em&gt;, where var(&lt;em&gt;e&lt;/em&gt;) = &lt;em&gt;sK + tI&lt;/em&gt;, where &lt;em&gt;K&lt;/em&gt; is a known kinship matrix and &lt;em&gt;I&lt;/em&gt; is the identity matrix. Think of &lt;em&gt;y&lt;/em&gt; as a vector of phenotypes and &lt;em&gt;X&lt;/em&gt; as a matrix of covariates. Let &lt;em&gt;v = s+t&lt;/em&gt; be the residual variance, and let &lt;em&gt;h = s/(s+t) = s/v&lt;/em&gt; be the heritability.&lt;/p&gt;

&lt;p&gt;First, a shout to &lt;a href=&#34;https://github.com/lomereiter&#34;&gt;Artem Tarasov&lt;/a&gt;, who wrote a &lt;a href=&#34;http://lomereiter.github.io/2015/02/16/lmm_cov.html&#34;&gt;series of blog posts&lt;/a&gt; walking through and explaining the source code for &lt;a href=&#34;https://github.com/MicrosoftGenomics/FaST-LMM&#34;&gt;FaST-LMM&lt;/a&gt; and &lt;a href=&#34;https://github.com/nickFurlotte/pylmm&#34;&gt;pylmm&lt;/a&gt;, and to &lt;a href=&#34;http://whatmind.com/&#34;&gt;Nick Furlotte&lt;/a&gt;, whose &lt;a href=&#34;https://github.com/nickFurlotte/pylmm&#34;&gt;pylmm&lt;/a&gt; code is especially clear and easy-to-read. Only by reading their work did I come to understand these LMMs.&lt;/p&gt;

&lt;p&gt;Back to the model fit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For a fixed value of the heritability, &lt;em&gt;h&lt;/em&gt;, we have var(&lt;em&gt;e&lt;/em&gt;) = &lt;em&gt;v[hK + (1-h)I] = vV&lt;/em&gt; where &lt;em&gt;V&lt;/em&gt; is known. And so we end up with a general least squares problem, which we can fit in order to estimate &lt;em&gt;b&lt;/em&gt; and &lt;em&gt;v&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;And actually, if you take the eigen decomposition of &lt;em&gt;K&lt;/em&gt;, say &lt;em&gt;K = UDU&amp;rsquo;&lt;/em&gt;, it turns out that you can write &lt;em&gt;hK + (1-h)I = hUDU&amp;rsquo; + (1-h)UU&amp;rsquo; = U[hD + (1-h)I]U&amp;rsquo;&lt;/em&gt;. That is, the eigenvectors of &lt;em&gt;K&lt;/em&gt; are the same as the eigenvectors of &lt;em&gt;hK + (1-h)I&lt;/em&gt;. And so if you pre-multiply &lt;em&gt;y&lt;/em&gt; and &lt;em&gt;X&lt;/em&gt; by &lt;em&gt;U&amp;rsquo;&lt;/em&gt;, you end up with a weighted least squares problem, which is way faster to fit than a general least squares problem.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Having fit the weighted least squares problem to estimate &lt;em&gt;b&lt;/em&gt; and &lt;em&gt;v&lt;/em&gt;, you can then calculate the corresponding log likelihood (or, better, the restricted log likelihood, if you want to do REML).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You&amp;rsquo;re then left with a one-dimensional optimization problem (optimizing the log likelihood over &lt;em&gt;h&lt;/em&gt;), which you can solve by &lt;a href=&#34;https://en.wikipedia.org/wiki/Brent%27s_method&#34;&gt;Brent&amp;rsquo;s method&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It seems quite obvious in retrospect. It&amp;rsquo;s a bit embarrassing that it&amp;rsquo;s taken me so long to come to this understanding.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;http://kbroman.org/lmmlite&#34;&gt;lmmlite&lt;/a&gt;, I implemented this algorithm (closely following the code in &lt;a href=&#34;https://github.com/nickFurlotte/pylmm&#34;&gt;pylmm&lt;/a&gt;) twice: in plain R, and then in C++ (using &lt;a href=&#34;https://github.com/RcppCore/RcppEigen&#34;&gt;RcppEigen&lt;/a&gt;, which is an interface to the &lt;a href=&#34;http://eigen.tuxfamily.org/index.php?title=Main_Page&#34;&gt;Eigen&lt;/a&gt; C++ linear algebra library). The plain R code is a bit slower then pylmm; the C++ code is a bit faster. In the C++ code, almost all of the computation time is devoted to the eigen decomposition of the kinship matrix. Once that&amp;rsquo;s done, the rest is super quick.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Session info from R/Travis</title>
      <link>/2015/09/25/session-info-from-rtravis/</link>
      <pubDate>Fri, 25 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/09/25/session-info-from-rtravis/</guid>
      <description>&lt;p&gt;For the problem &lt;a href=&#34;http://kbroman.org/blog/2015/09/24/its-not-you-its-me&#34;&gt;I reported yesterday&lt;/a&gt;, in which my R package was working fine locally but failing on &lt;a href=&#34;http://travis-ci.org&#34;&gt;Travis&lt;/a&gt;, the key solution is to run &lt;code&gt;update.packages(ask=FALSE)&lt;/code&gt; locally, and maybe even &lt;code&gt;update.packages(ask=FALSE, type=&amp;quot;source&amp;quot;)&lt;/code&gt; to be sure to grab the source of packages for which binaries are not yet available. I now know to do that.&lt;/p&gt;

&lt;p&gt;In addition, it&amp;rsquo;d be useful to have session information (R and package versions) in the results from Travis. This has proven a bit tricky.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t want to go with a fully custom Travis script, your &lt;a href=&#34;http://docs.travis-ci.com/user/customizing-the-build/&#34;&gt;customization options&lt;/a&gt; are limited. We really only care about the case of a failure, so &lt;code&gt;after_success&lt;/code&gt; is not of interest, and &lt;code&gt;after_script&lt;/code&gt; seems not to be run if there&amp;rsquo;s a Travis fail. Moreover, &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;after_failure&lt;/code&gt; are defined by the main &lt;code&gt;language: r&lt;/code&gt; script, so you can&amp;rsquo;t change them without going all-custom.&lt;/p&gt;

&lt;p&gt;What&amp;rsquo;s left is &lt;code&gt;before_script&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I want to see the result of &lt;code&gt;devtools::session_info()&lt;/code&gt; with the package of interest loaded, but the package actually gets built &lt;em&gt;after&lt;/em&gt; &lt;code&gt;before_script&lt;/code&gt; is run, so we&amp;rsquo;ll need to build and install it, even though it&amp;rsquo;ll be built and installed again afterwards. The best I could work out is in &lt;a href=&#34;https://github.com/kbroman/testsysfile/blob/master/.travis.yml#L12-L19&#34;&gt;this example &lt;code&gt;.travis.yml&lt;/code&gt; file&lt;/a&gt;, with the key bits being:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;before_script:
  - export PKG_NAME=$(Rscript -e &#39;cat(paste0(devtools::as.package(&amp;quot;.&amp;quot;)$package))&#39;)
  - export PKG_TARBALL=$(Rscript -e &#39;pkg &amp;lt;- devtools::as.package(&amp;quot;.&amp;quot;); cat(paste0(pkg$package,&amp;quot;_&amp;quot;,pkg$version,&amp;quot;.tar.gz&amp;quot;))&#39;)
  - R CMD build --no-build-vignettes .
  - R CMD INSTALL ${PKG_TARBALL}
  - rm ${PKG_TARBALL}
  - echo &amp;quot;Session info:&amp;quot;
  - Rscript -e &amp;quot;library(${PKG_NAME});devtools::session_info(&#39;${PKG_NAME}&#39;)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I use &lt;code&gt;--no-build-vignettes&lt;/code&gt; in &lt;code&gt;R CMD build&lt;/code&gt; as otherwise the package would be built and installed yet another time. And I remove the &lt;code&gt;.tar.gz&lt;/code&gt; file afterwards, to avoid having the later check complain about the extra file.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s an &lt;a href=&#34;https://travis-ci.org/kbroman/testsysfile#L850-L864&#34;&gt;example of the session info in the Travis log&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have suggests about how to simplify this, I&amp;rsquo;d be happy to hear them. I guess the key would be to have the main Travis script for R revised to report session information.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&#34;https://twitter.com/jennybryan&#34;&gt;Jenny Bryan&lt;/a&gt; for &lt;a href=&#34;https://twitter.com/JennyBryan/status/647177192514785280&#34;&gt;showing me how to search for instances of &lt;code&gt;session_info&lt;/code&gt; in &lt;code&gt;.travis.yml&lt;/code&gt; files on GitHub&lt;/a&gt;, and to &lt;a href=&#34;https://twitter.com/cpsievert&#34;&gt;Carson Sievert&lt;/a&gt; for &lt;a href=&#34;https://twitter.com/cpsievert/status/647189393162178560&#34;&gt;further moral support&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It&#39;s not you, it&#39;s me</title>
      <link>/2015/09/24/its-not-you-its-me/</link>
      <pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/09/24/its-not-you-its-me/</guid>
      <description>&lt;p&gt;Somehow when my code stops working, my first (and second, and third) reaction is to blame everything except my own code. (&amp;ldquo;It&amp;rsquo;s not &lt;em&gt;me&lt;/em&gt;, it&amp;rsquo;s &lt;em&gt;you&lt;/em&gt;.&amp;ldquo;)&lt;/p&gt;

&lt;p&gt;And almost always, it&amp;rsquo;s my own code that&amp;rsquo;s the problem (hence the title of this post).&lt;/p&gt;

&lt;p&gt;I spent the day trying to resolve a bug in my early-in-development R package, &lt;a href=&#34;https://github.com/kbroman/qtl2geno&#34;&gt;qtl2geno&lt;/a&gt;. In the process, I blamed&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;TravisCI for not handling &lt;code&gt;system.file()&lt;/code&gt; properly.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;R-devel for having broken &lt;code&gt;system.file()&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;data.table::fread()&lt;/code&gt; for treating &lt;code&gt;sep=NULL&lt;/code&gt; differently on different operating systems.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, none of these were true. I was just passing &lt;code&gt;sep=NULL&lt;/code&gt; to &lt;code&gt;data.table::fread()&lt;/code&gt;, and that worked in the previous version, but doesn&amp;rsquo;t work in the latest release on &lt;a href=&#34;https://cran.r-project.org&#34;&gt;CRAN&lt;/a&gt;, and I hadn&amp;rsquo;t yet installed the latest version of &lt;a href=&#34;https://github.com/Rdatatable/data.table&#34;&gt;data.table&lt;/a&gt; on my Mac, but Travis and my junky Windows laptop had the latest version.&lt;/p&gt;

&lt;p&gt;The debugging process seems a potentially interesting case study, so I thought I&amp;rsquo;d write down some of the details.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The whole thing started off with my &lt;a href=&#34;https://github.com/kbroman/qtl2geno&#34;&gt;qtl2geno&lt;/a&gt; package suddenly failing on &lt;a href=&#34;http://travis-ci.org&#34;&gt;TravisCI&lt;/a&gt;, even though it was still passing &lt;code&gt;R CMD check&lt;/code&gt; on my local machine. (This was on 19 Sept 2015, when a new version of data.table hit CRAN, but I didn&amp;rsquo;t realize that until the very end of the story.)&lt;/p&gt;

&lt;p&gt;The problem line was in a &lt;a href=&#34;https://github.com/kbroman/qtl2geno/blob/master/vignettes/user_guide.Rmd&#34;&gt;vignette&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grav2 &amp;lt;- read_cross2( system.file(&amp;quot;extdata&amp;quot;, &amp;quot;grav2.zip&amp;quot;, package=&amp;quot;qtl2geno&amp;quot;) )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The changes I&amp;rsquo;d been making to my package didn&amp;rsquo;t seem to have anything to do with this, so I concluded that the problem was &lt;code&gt;system.file()&lt;/code&gt;. Why that would have worked before but not now, I couldn&amp;rsquo;t say, but I figured maybe Travis was installing things differently than before.&lt;/p&gt;

&lt;p&gt;I changed that code block to &lt;code&gt;eval=FALSE&lt;/code&gt;, but then a bunch of tests using &lt;code&gt;read_cross2( system.file( ... ) )&lt;/code&gt; were failing instead. Again, I figured the problem was &lt;code&gt;system.file()&lt;/code&gt;, because &lt;code&gt;R CMD check&lt;/code&gt; worked fine on my machine.&lt;/p&gt;

&lt;p&gt;I then thought maybe Travis was using R-devel whereas I was using the R-release. So I used &lt;a href=&#34;http://win-builder.r-project.org/&#34;&gt;R Win-builder&lt;/a&gt; to test my package with R-devel, and sure enough it failed there. So it wasn&amp;rsquo;t Travis. My conclusion was that R-devel had broken &lt;code&gt;system.file()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Poked around some more, and then finally used &lt;a href=&#34;http://win-builder.r-project.org/&#34;&gt;R Win-builder&lt;/a&gt; with R-release. And it failed with that, too. So it wasn&amp;rsquo;t R-devel either.&lt;/p&gt;

&lt;p&gt;I then created a little tester package, &lt;a href=&#34;https://github.com/kbroman/testsysfile&#34;&gt;testsysfile&lt;/a&gt;, testing &lt;code&gt;system.file()&lt;/code&gt; with &lt;code&gt;read.csv()&lt;/code&gt; and then with &lt;code&gt;data.table::fread()&lt;/code&gt;. That all worked fine. So it seemed like it wasn&amp;rsquo;t actually &lt;code&gt;system.file()&lt;/code&gt;, but something within &lt;code&gt;read_cross2()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So finally I poked into my own code, and then I realized that I was passing a &lt;code&gt;NULL&lt;/code&gt; value to the &lt;code&gt;sep&lt;/code&gt; argument of &lt;code&gt;fread()&lt;/code&gt;. (See &lt;a href=&#34;https://github.com/kbroman/qtl2geno/blob/master/R/read_cross2.R#L99-L100&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/kbroman/qtl2geno/blob/master/R/read_cross2.R#L474-L485&#34;&gt;here&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;But why would &lt;code&gt;sep=NULL&lt;/code&gt; work on my Mac but not on Travis or R Win-builder? I pulled out my junky Windows laptop (purchased in order to have a better sense of what my students were dealing with), went through all of the Windows updates, then updated R, &lt;a href=&#34;https://cran.r-project.org/bin/windows/Rtools/&#34;&gt;Rtools&lt;/a&gt;, and &lt;a href=&#34;http://rstudio.com&#34;&gt;RStudio&lt;/a&gt;, and tried things out there.&lt;/p&gt;

&lt;p&gt;With my &lt;a href=&#34;https://github.com/kbroman/testsysfile&#34;&gt;testsysfile&lt;/a&gt; package, I could see that &lt;code&gt;data.table::fread()&lt;/code&gt; was throwing an error with &lt;code&gt;sep=NULL&lt;/code&gt; on Windows, though it was working fine on my Mac.&lt;/p&gt;

&lt;p&gt;I spent some time making a patch to &lt;code&gt;fread()&lt;/code&gt;, and I was really close to submitting a pull request. (Treating &lt;code&gt;sep=NULL&lt;/code&gt; didn&amp;rsquo;t seem important, but it did seem like it the behavior should be the same on Windows and Mac.) But then I saw, in the &lt;a href=&#34;https://github.com/Rdatatable/data.table/blob/master/README.md&#34;&gt;README&lt;/a&gt; file, that there were &lt;a href=&#34;https://github.com/Rdatatable/data.table/blob/master/Contributing.md&#34;&gt;Contribution guidelines&lt;/a&gt;. I figured I&amp;rsquo;d better go through them.&lt;/p&gt;

&lt;p&gt;The guidelines say, &amp;ldquo;squash all your commits together,&amp;rdquo; so I spent some time getting my two commits combined into one. The guidelines also say to update the README file. In doing so, I realized that they&amp;rsquo;d put a new version of data.table on CRAN on 19 Sep 2015, which is precisely when my package started failing on Travis.&lt;/p&gt;

&lt;p&gt;And so then I finally installed the updated version of data.table on my Mac, and saw that there was no operating system dependence; the differences I was seeing were just because of the old vs new version of data.table.&lt;/p&gt;

&lt;p&gt;So data.table was updated in a way where &lt;code&gt;sep=NULL&lt;/code&gt; was no longer working, and in my own code, I had relied on that. So six hours, &lt;a href=&#34;https://twitter.com/kwbroman/status/647125510686920705&#34;&gt;many tweets&lt;/a&gt;, lots of blaming of others, and finally I&amp;rsquo;d worked out that it was all my own fault.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MongoDB with D3.js</title>
      <link>/2015/06/22/mongodb-with-d3-js/</link>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/06/22/mongodb-with-d3-js/</guid>
      <description>

&lt;p&gt;I consider interactive data visualization to be the critical tool for exploration of high-dimensional data.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s led me to spend a good amount of time in the last few years learning some new skills (&lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt; and &lt;a href=&#34;http://coffeescript.org&#34;&gt;CoffeeScript&lt;/a&gt;) and developing some new tools, particularly the R package &lt;a href=&#34;http://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt;, which provides interactive versions of the many data visualizations in &lt;a href=&#34;http://rqtl.org&#34;&gt;R/qtl&lt;/a&gt;, my &lt;a href=&#34;https://www.biostat.wisc.edu/~kbroman/publications/rqtl_14yrs.pdf&#34;&gt;long-in-development&lt;/a&gt; R package for mapping genetic loci (called quantitative trait loci, QTL) that underlie complex trait variation in experimental organisms.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt; is rough in spots, and while it works well for moderate-sized data sets, it can&amp;rsquo;t well handle truly large-scale data, as it just dumps all of the data into the file viewed by a web browser.&lt;/p&gt;

&lt;p&gt;For large-scale data, one needs to dynamically load slices of the data based on user interactions. It seems best to have a formal database behind the scenes. But I think I&amp;rsquo;m not unusual, among statisticians, in having almost no experience working with databases. My collaborators tend to keep things in Excel. Even for quite large problems, I keep things in flat files.&lt;/p&gt;

&lt;p&gt;So, I&amp;rsquo;ve been trying to come to understand the whole database business, and how I might use one for larger-scale data visualizations. I think I&amp;rsquo;ve finally made that last little conceptual step, where I can see what I need to do. I made a &lt;a href=&#34;https://github.com/kbroman/d3examples/tree/master/mongodb&#34;&gt;small illustration&lt;/a&gt; in my &lt;a href=&#34;https://github.com/kbroman/d3examples&#34;&gt;d3examples&lt;/a&gt; repository on GitHub.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&#34;learning-mongodb&#34;&gt;Learning MongoDB&lt;/h3&gt;

&lt;p&gt;I thought &lt;a href=&#34;http://www.mongodb.org&#34;&gt;mongoDB&lt;/a&gt; seemed like a good database to try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;storage of general documents seems a good match for the sort of data I work with&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;use of JSON/BSON seems a good match for &lt;a href=&#34;http://d3js.org&#34;&gt;D3.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I&amp;rsquo;ve been taking an online-course though &lt;a href=&#34;https://university.mongodb.com/&#34;&gt;MongoDB University&lt;/a&gt; &amp;ndash; the &lt;a href=&#34;https://university.mongodb.com/courses/M101JS/about&#34;&gt;one for Node.js developers&lt;/a&gt;. I should have done &lt;a href=&#34;https://university.mongodb.com/courses/M101P/about&#34;&gt;the more general one, using Python&lt;/a&gt;, but I was thinking it&amp;rsquo;d be interesting to learn &lt;a href=&#34;http://nodejs.org&#34;&gt;Node&lt;/a&gt;, which is basically command-line scripting in javascript. I guess the advantage of node is that you can just write javascript. But personally I prefer to switch to the language appropriate to the task, so I&amp;rsquo;m not too hot on node. But maybe I just haven&amp;rsquo;t come to understand how best to make use of the whole callback function business.&lt;/p&gt;

&lt;p&gt;MongoDB is not all that hard. It&amp;rsquo;s just kind of boring. The MongoDB Uni class is quite well done, though a few of the lectures were frustratingly out-of-date. I have the &lt;a href=&#34;http://shop.oreilly.com/product/0636920028031.do&#34;&gt;MongoDB book&lt;/a&gt;, but it&amp;rsquo;s been rough going; the class has been good for that. (The weekly deadlines have been good for motivating me to get through the dull &amp;ndash; for me &amp;ndash; material.)&lt;/p&gt;

&lt;p&gt;The obvious bits with a database: how to get stuff into it and then back out of it. And then I guess deleting or changing stuff. So that&amp;rsquo;s all fine. I also learned about making indexes, so that you can more quickly get stuff out later. I don&amp;rsquo;t think my needs for these things are all that complicated. And so I think I understand those bits.&lt;/p&gt;

&lt;h3 id=&#34;getting-the-data-for-the-data-vis&#34;&gt;Getting the data for the data vis&lt;/h3&gt;

&lt;p&gt;The last key step that I was pondering last night: how do I, based on some user interaction with a data visualization (clicking on a point, or some such), fire off a request to the database and get the data back?&lt;/p&gt;

&lt;p&gt;I guessed some sort of &lt;a href=&#34;https://en.wikipedia.org/wiki/Representational_state_transfer&#34;&gt;RESTful API&lt;/a&gt; type thing. But while I can write that down, I don&amp;rsquo;t really understand what the hell it means.&lt;/p&gt;

&lt;p&gt;But then I thought, what I need is to use some sort of &lt;a href=&#34;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods&#34;&gt;HTTP GET request&lt;/a&gt;. I kind of know what that means, but I don&amp;rsquo;t really understand what happens on the back end.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d been poking around in &lt;a href=&#34;http://api.mongodb.org/python/current/tutorial.html&#34;&gt;pymongo&lt;/a&gt;, the python-based mongoDB driver. (I like it much better than the &lt;a href=&#34;https://api.mongodb.org/ruby/current/&#34;&gt;ruby&lt;/a&gt; or &lt;a href=&#34;http://docs.mongodb.org/ecosystem/drivers/node-js/&#34;&gt;node&lt;/a&gt; drivers.) And as part of the Mongo University class, we used &lt;a href=&#34;http://expressjs.com/&#34;&gt;express&lt;/a&gt; with Node to do some HTTP GET and PUSH. If I want to grab some bit of data, I could have a python script running on the back end, looking for an http request, and then based on some key that was passed, grabbing data from the database and sending it back as JSON.&lt;/p&gt;

&lt;p&gt;So I looked around for how to do this with mongoDB, found &lt;a href=&#34;https://github.com/10gen-labs/sleepy.mongoose&#34;&gt;sleepy mongoose&lt;/a&gt;, but that seemed like more than I wanted, and then came to &lt;a href=&#34;http://bottlepy.org/docs/dev/index.html&#34;&gt;bottle&lt;/a&gt;, which seemed like what I needed to handle the http bit. The example on the front page is just what I want: take a name from a URL and use it as input to some function, and give results back.&lt;/p&gt;

&lt;h3 id=&#34;mongodb-d3-illustration&#34;&gt;MongoDB/D3 illustration&lt;/h3&gt;

&lt;p&gt;The goal of all this: as part of some data visualization, the user will hover over or click a point, and this will lead to a request to the database, and then a plot of the data that comes back.&lt;/p&gt;

&lt;p&gt;It seemed like a simple test case would be to use the data for &lt;a href=&#34;https://en.wikipedia.org/wiki/Anscombe&#39;s_quartet&#34;&gt;Anscombe&amp;rsquo;s quartet&lt;/a&gt;. Put the four series into a MongoDB database, and then have four buttons that, when clicked, cause a request to the database to grab the corresponding series, which is then plotted.&lt;/p&gt;

&lt;p&gt;So first I wrote an &lt;a href=&#34;https://github.com/kbroman/d3examples/blob/master/mongodb/grab_anscombe.R&#34;&gt;R script&lt;/a&gt; to grab the data from the table on the &lt;a href=&#34;https://en.wikipedia.org/wiki/Anscombe&#39;s_quartet&#34;&gt;wikipedia page&lt;/a&gt; and write it to a &lt;a href=&#34;http://www.json.org/&#34;&gt;JSON&lt;/a&gt; file. I&amp;rsquo;m sure there was an easier way to get the data in a suitable form, but I was really procrastinating from writing a paper at this point, so I thought I&amp;rsquo;d test my web scraping skill in a simple case.&lt;/p&gt;

&lt;p&gt;I then wrote a &lt;a href=&#34;https://github.com/kbroman/d3examples/blob/master/mongodb/mongo_insert.py&#34;&gt;python script&lt;/a&gt; that reads in the JSON file and inserts the data into a mongoDB database. You make a database connection with &lt;code&gt;pymongo.MongoClient()&lt;/code&gt; and insert the documents with the &lt;code&gt;insert_one()&lt;/code&gt; method to a collection. I later added an index with &lt;code&gt;create_index()&lt;/code&gt;; pretty silly here, but for large problems it would be useful.&lt;/p&gt;

&lt;p&gt;So, the data&amp;rsquo;s in the database. How to get it back out? I wrote a second &lt;a href=&#34;https://github.com/kbroman/d3examples/blob/master/mongodb/mongo_request.py&#34;&gt;python script&lt;/a&gt; (just 8 lines, really), that uses &lt;a href=&#34;http://bottlepy.org&#34;&gt;bottle&lt;/a&gt; to create a server that connects a URL to a function call. The function then uses &lt;a href=&#34;http://api.mongodb.org/python/current/tutorial.html&#34;&gt;pymongo&lt;/a&gt; to find the corresponding document and send it back as JSON. One &lt;a href=&#34;http://api.mongodb.org/python/current/tutorial.html&#34;&gt;tricky bit that needed some extra googling&lt;/a&gt; was getting the browser to allow the request.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/kbroman/d3examples/tree/master/mongodb/anscombe.coffee&#34;&gt;D3 code (in coffeescript&lt;/a&gt;) is pretty standard. On clicking a button, I call &lt;code&gt;d3.json&lt;/code&gt; with the appropriate URL that corresponds to a request from the python script; the data come back as JSON, and are then passed to a callback function to make the actual plot.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/kbroman/d3examples/blob/master/mongodb/&#34;&gt;MongoDB/D3 illustration&lt;/a&gt; is a toy example, but it represents an important step for me, personally. I&amp;rsquo;m rather proud of it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kbroman.files.wordpress.com/2015/06/anscombe_2.png&#34; alt=&#34;Anscombe&#39;s quartet, set 2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t actually have a live example of this. That&amp;rsquo;s the next thing: how to have this running on a proper web server, rather than just locally.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cheat sheets for R-based Software Carpentry course</title>
      <link>/2015/04/29/cheat-sheets-for-r-based-software-carpentry-course/</link>
      <pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/04/29/cheat-sheets-for-r-based-software-carpentry-course/</guid>
      <description>&lt;p&gt;At the &lt;a href=&#34;http://software-carpentry.org&#34;&gt;Software Carpentry&lt;/a&gt; workshop at  &lt;a href=&#34;https://github.com/UW-Madison-ACI/boot-camps/blob/2014-08-25/README.md&#34;&gt;UW-Madison in August, 2014&lt;/a&gt;, one of the students suggested that we hand out some cheat sheets on each topic. I thought that was a really good idea.&lt;/p&gt;

&lt;p&gt;So at the SWC workshop at &lt;a href=&#34;http://karawoo.com/2015-04-27-wsu/&#34;&gt;Washington State University this week&lt;/a&gt;, we handed out the following five pages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf&#34;&gt;ddplyr&lt;/a&gt; (from RStudio)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.rstudio.com/wp-content/uploads/2015/04/ggplot2-cheatsheet.pdf&#34;&gt;ggplot2&lt;/a&gt; (from RStudio)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.cheatography.com/davechild/cheat-sheets/linux-command-line/pdf/&#34;&gt;unix command line&lt;/a&gt; (from Dave Child at Cheatography)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://training.github.com/kit/downloads/github-git-cheat-sheet.pdf&#34;&gt;git&lt;/a&gt; (from GitHub)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf&#34;&gt;R Markdown&lt;/a&gt; (from RStudio)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I really appreciate the work (and design sense) that were put into these.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yet another R package primer</title>
      <link>/2014/08/28/yet-another-r-package-primer/</link>
      <pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/08/28/yet-another-r-package-primer/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://had.co.nz/&#34;&gt;Hadley Wickham&lt;/a&gt; is writing what will surely be a &lt;a href=&#34;http://r-pkgs.had.co.nz/&#34;&gt;great book&lt;/a&gt; about the basics of R packages. And &lt;a href=&#34;http://hilaryparker.com&#34;&gt;Hilary Parker&lt;/a&gt; wrote a &lt;a href=&#34;https://twitter.com/ErikaMudrak/status/504732734674444288&#34;&gt;very&lt;/a&gt; &lt;a href=&#34;https://twitter.com/polesasunder/status/504785818922131456&#34;&gt;influential&lt;/a&gt; &lt;a href=&#34;http://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch&#34;&gt;post on how to write an R package&lt;/a&gt;. So it seems like that topic is well covered.&lt;/p&gt;

&lt;p&gt;Nevertheless, I&amp;rsquo;d been thinking for some time that I should write another &lt;a href=&#34;http://kbroman.org/blog/2014/02/06/knitr-in-a-knutshell-tutorial/&#34;&gt;minimal tutorial with an alliterative name&lt;/a&gt;, on how to turn R code into a package. And it does seem valuable to have a diversity of resources on such an important topic. (R packages are the best way to distribute R code, or just to keep track of your own personal R code, as part of a reproducible research process.)&lt;/p&gt;

&lt;p&gt;So I&amp;rsquo;m going ahead with it, even though it doesn&amp;rsquo;t seem necessary: the &lt;a href=&#34;http://kbroman.org/pkg_primer&#34;&gt;R package primer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s not completely done, but the &lt;a href=&#34;http://kbroman.org/pkg_primer&#34;&gt;basic stuff is there&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Testing an R package&#39;s interactive graphs</title>
      <link>/2014/08/01/testing-an-r-packages-interactive-graphs/</link>
      <pubDate>Fri, 01 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/08/01/testing-an-r-packages-interactive-graphs/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been working on an R package, &lt;a href=&#34;http://kbroman.org/qtlcharts&#34;&gt;R/qtlcharts&lt;/a&gt;, with &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt;-based interactive graphs for quantitative trait locus mapping experiments.&lt;/p&gt;

&lt;p&gt;Testing the interactive charts it produces is a bit of a pain. It seems like I pretty much &lt;em&gt;have&lt;/em&gt; to just open a series of examples in a web browser and tab through them manually, checking that they look okay, that the interactions seem to work, and that they&amp;rsquo;re not giving any sort of errors.&lt;/p&gt;

&lt;p&gt;But if I want to post the package to &lt;a href=&#34;http://cran.r-project.org&#34;&gt;CRAN&lt;/a&gt;, it seems (from the &lt;a href=&#34;http://cran.r-project.org/web/packages/policies.html&#34;&gt;CRAN policy&lt;/a&gt;) that the examples in the &lt;code&gt;.Rd&lt;/code&gt; files shouldn&amp;rsquo;t be opening a web browser. Thus, I need to surround the example code with &lt;code&gt;\dontrun{}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But I was using those examples, and &lt;code&gt;R CMD check&lt;/code&gt;, to open the series of examples for manual checking.&lt;/p&gt;

&lt;p&gt;So, what I&amp;rsquo;ve decided to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Include examples opening a browser, but within &lt;code&gt;\dontrun{}&lt;/code&gt; so the browser isn&amp;rsquo;t opened in &lt;code&gt;R CMD check&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Also include examples that don&amp;rsquo;t open the browser, within &lt;code&gt;\dontshow{}&lt;/code&gt;, so that &lt;code&gt;R CMD check&lt;/code&gt; will at least check the basics.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Write a &lt;a href=&#34;http://ruby-lang.org&#34;&gt;ruby&lt;/a&gt; script that pulls out all of the examples from the &lt;code&gt;.Rd&lt;/code&gt; files, stripping off the &lt;code&gt;\dontrun{}&lt;/code&gt; and &lt;code&gt;\dontshow{}&lt;/code&gt; and pasting it all into a &lt;code&gt;.R&lt;/code&gt; file.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Periodically run &lt;code&gt;R CMD BATCH&lt;/code&gt; on that set of examples, to do the manual checking of the interactive graphs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will always be a bit of a pain, but with this approach I can do my manual testing in a straightforward way and still fulfill the CRAN policies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;a href=&#34;http://had.co.nz/&#34;&gt;Hadley Wickham&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hadleywickham/status/495535873711431681&#34;&gt;pointed me&lt;/a&gt; to &lt;strong&gt;&lt;code&gt;\donttest{}&lt;/code&gt;&lt;/strong&gt;, added in R ver 2.7 (in 2008). (More value from blog + twitter!)&lt;/p&gt;

&lt;p&gt;So I replaced my &lt;code&gt;\dontrun{}&lt;/code&gt; bits with &lt;code&gt;\donttest{}&lt;/code&gt;. And I can use &lt;code&gt;devtools::run_examples()&lt;/code&gt; to run all of the examples, for my manual checks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why hadn&#39;t I written a function for that?</title>
      <link>/2014/07/16/why-hadnt-i-written-a-function-for-that/</link>
      <pubDate>Wed, 16 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/07/16/why-hadnt-i-written-a-function-for-that/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m often typing the same bits of code over and over. Those bits of code really should be made into functions.&lt;/p&gt;

&lt;p&gt;For example, I&amp;rsquo;m still using base graphics. (&lt;a href=&#34;http://ggplot2.org&#34;&gt;ggplot2&lt;/a&gt; is on my &amp;ldquo;to do&amp;rdquo; list, really!) Often some things will be drawn with a slight overlap of the border of the plotting region. And in heatmaps with &lt;code&gt;image&lt;/code&gt;, the border is often obscured. I want a nice black rectangle around the outside.&lt;/p&gt;

&lt;p&gt;So I&amp;rsquo;ll write the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;u &amp;lt;- par(&amp;quot;usr&amp;quot;)
rect(u[1], u[3], u[2], u[4])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I don&amp;rsquo;t know &lt;em&gt;how&lt;/em&gt; many times I&amp;rsquo;ve typed that! Today I realized that I should put those two lines in a function &lt;code&gt;add_border()&lt;/code&gt;. And then I added &lt;code&gt;add_border()&lt;/code&gt; to my &lt;a href=&#34;http://github.com/kbroman/broman&#34;&gt;R/broman package&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was a bit more work adding the &lt;a href=&#34;https://github.com/klutometis/roxygen&#34;&gt;Roxygen2&lt;/a&gt; comments for the documentation, but now I&amp;rsquo;ve got a proper function that is easier to use and much more clear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: &lt;a href=&#34;https://twitter.com/tpoi&#34;&gt;@tpoi&lt;/a&gt; &lt;a href=&#34;https://twitter.com/tpoi/status/489622770398289920&#34;&gt;pointed out&lt;/a&gt; that &lt;code&gt;box()&lt;/code&gt; does the same thing as my &lt;code&gt;add_border()&lt;/code&gt;. My general point still stands, and this raises the additional point: twitter + blog -&amp;gt; education.&lt;/p&gt;

&lt;p&gt;I want to add, &amp;ldquo;I&amp;rsquo;m an idiot&amp;rdquo; but I think I&amp;rsquo;ll just say that there&amp;rsquo;s always more that I can learn about R. And I&amp;rsquo;ll remove &lt;code&gt;add_border&lt;/code&gt; from R/broman and just use &lt;code&gt;box()&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simple web sites with GitHub Pages</title>
      <link>/2014/04/05/simple-web-sites-with-github-pages/</link>
      <pubDate>Sat, 05 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/04/05/simple-web-sites-with-github-pages/</guid>
      <description>&lt;p&gt;If you love &lt;a href=&#34;http://git-scm.com&#34;&gt;git&lt;/a&gt; and &lt;a href=&#34;http://github.com&#34;&gt;GitHub&lt;/a&gt;, you&amp;rsquo;ll also love &lt;a href=&#34;http://pages.github.com&#34;&gt;GitHub Pages&lt;/a&gt;, for producing websites using &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; and &lt;a href=&#34;http://git-scm.com&#34;&gt;git&lt;/a&gt;: you write pages in Markdown within a &lt;code&gt;gh-pages&lt;/code&gt; branch in a git repository; when you push to GitHub, a corresponding site is automatically constructed.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Last night, I wrote a &lt;a href=&#34;http://kbroman.github.io/simple_site&#34;&gt;minimal tutorial&lt;/a&gt; on how I&amp;rsquo;ve been using this (for example, for the website for my &lt;a href=&#34;http://kbroman.github.io/qtlcharts&#34;&gt;R/qtlcharts package&lt;/a&gt;, on interactive graphics for QTL data).&lt;/p&gt;

&lt;p&gt;In the tutorial, I wrote:&lt;/p&gt;

&lt;blockquote&gt;(For example, I don&#39;t like how simple code is rendered in red within a gray box. Ultimately I&#39;ll try to figure out how to change that, but for now I just pretend that I like it that way.)&lt;/blockquote&gt;

&lt;p&gt;But this morning, I figured out how to change that: create &lt;a href=&#34;https://github.com/kbroman/simple_site/blob/gh-pages/assets/themes/twitter/css/kbroman.css&#34;&gt;my own css file&lt;/a&gt; with the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;code {
  padding: 0;
  font-size: 90%;
  color: black;
  background-color: white;
  border: 0px solid white;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then &lt;a href=&#34;https://github.com/kbroman/simple_site/blob/gh-pages/_includes/themes/twitter/default.html#L20&#34;&gt;add a line&lt;/a&gt; to the &lt;a href=&#34;https://github.com/kbroman/simple_site/blob/gh-pages/_includes/themes/twitter/default.html&#34;&gt;&lt;code&gt;default.html&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Googling errors</title>
      <link>/2014/02/14/googling-errors/</link>
      <pubDate>Fri, 14 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/02/14/googling-errors/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://twitter.com/roguelynn&#34;&gt;@roguelynn&lt;/a&gt; tweeted the other day:&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;If attendees of this weekend’s intro to python workshop leave with one thing, it’ll be to Google your error messages first and foremost.&lt;/p&gt;&amp;mdash; __root__ (@roguelynn) &lt;a href=&#34;https://twitter.com/roguelynn/status/431321921909968896?ref_src=twsrc%5Etfw&#34;&gt;February 6, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;p&gt;I had just talked about the technique in my &lt;a href=&#34;http://kbroman.github.io/Tools4RR/&#34;&gt;Tools for Reproducible Research&lt;/a&gt; course, and I had a few recent examples.&lt;/p&gt;

&lt;h3 id=&#34;gtk-warning-cannot-open-display&#34;&gt;Gtk-WARNING **: cannot open display:&lt;/h3&gt;

&lt;p&gt;I was logged into a department server, trying to clone a private repository from GitHub, and got an error like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(gnome-ssh-askpass:1731): Gtk-WARNING **: cannot open display:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I googled that, and the first item was a &lt;a href=&#34;http://stackoverflow.com/questions/16077971/git-push-produces-gtk-warning&#34;&gt;stackoverflow question&lt;/a&gt;, whose answer said &amp;ldquo;&lt;code&gt;unset SSH_ASKPASS&lt;/code&gt;&amp;rdquo;, which totally worked.&lt;/p&gt;

&lt;h3 id=&#34;except-keyerror-k-raise-attributeerror-k&#34;&gt;except KeyError, k: raise AttributeError, k&lt;/h3&gt;

&lt;p&gt;AsciiDoc was giving me this error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;asciidoc -a data-uri -a toc -a toclevels=4 -a num example2.txt
  File &amp;quot;/usr/local/bin/asciidoc&amp;quot;, line 101
    except KeyError, k: raise AttributeError, k
                   ^
SyntaxError: invalid syntax
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Google the &amp;ldquo;&lt;code&gt;except KeyError&lt;/code&gt;&amp;rdquo; line, and you get to a &lt;a href=&#34;https://groups.google.com/forum/#!topic/asciidoc/7ICtOReZJ74&#34;&gt;Q&amp;amp;A on the AsciiDoc google group&lt;/a&gt;, which says &amp;ldquo;Asciidoc is Python 2, not 3.&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;mclapply-isn-t-working-in-windows&#34;&gt;mclapply isn&amp;rsquo;t working in windows&lt;/h3&gt;

&lt;p&gt;I got a report that parallel processing in my &lt;a href=&#34;http://www.rqtl.org&#34;&gt;R/qtl&lt;/a&gt; package wasn&amp;rsquo;t working in Windows.&lt;/p&gt;

&lt;p&gt;I googled &amp;ldquo;mclapply isn&amp;rsquo;t working windows&amp;rdquo; (because mclapply was the function I was using) and got &lt;a href=&#34;http://stackoverflow.com/questions/17196261/understanding-the-differences-between-mclapply-and-parlapply-in-r&#34;&gt;this stackoverflow page&lt;/a&gt;, which says:&lt;/p&gt;

&lt;blockquote&gt;since Windows does not have fork(), it will run standard lapply instead - no parallelization&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Emacs key bindings in MS Word</title>
      <link>/2014/02/12/emacs-key-bindings-in-ms-word/</link>
      <pubDate>Wed, 12 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>/2014/02/12/emacs-key-bindings-in-ms-word/</guid>
      <description>&lt;p&gt;Collaboration on grant proposals has forced me to spend a lot of time writing in MS Word lately. I find my self typing emacs key strokes and then getting annoyed when I have to move my hand over to the arrow keys. (It&amp;rsquo;s maybe not as bad as typing Markdown marks within a LaTeX document, which I&amp;rsquo;ve also been doing.)&lt;/p&gt;

&lt;p&gt;A google search on the title of this post got me &lt;a href=&#34;http://emacsblog.org/2007/02/18/emacs-key-bindings-in-ms-word/&#34;&gt;to this post&lt;/a&gt;. I should have looked before.&lt;/p&gt;

&lt;p&gt;Following that suggestion, I was able to get these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-b&lt;/code&gt; – CharLeft&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-f&lt;/code&gt; – CharRight&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-e&lt;/code&gt; – EndOfLine&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-p&lt;/code&gt; – LineUp&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-n&lt;/code&gt; – LineDown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-a&lt;/code&gt; – StartOfLine&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-v&lt;/code&gt; – PageDown&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I can&amp;rsquo;t figure out how to have &lt;code&gt;M-v&lt;/code&gt; for PageUp, though, because &lt;code&gt;M-v&lt;/code&gt; seems permanently stuck to &amp;ldquo;√&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;The procedure, in MS Word 2011 for Mac, is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Tools → Customize Keyboard&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;All Commands&amp;rdquo; under &amp;ldquo;Categories:&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Select the command (e.g., RightChar) under &amp;ldquo;Commands:&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Press the keyboard shortcut in the &amp;ldquo;Press new keyboard shortcut&amp;rdquo; box&lt;/li&gt;
&lt;li&gt;Click the Assign button&lt;/li&gt;
&lt;li&gt;Repeat for the other commands you want&lt;/li&gt;
&lt;li&gt;Click OK&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I needed two more, &lt;code&gt;C-d&lt;/code&gt; and &lt;code&gt;C-k&lt;/code&gt;; it took me a while to figure out how to do it, as there didn&amp;rsquo;t seem to be any built-in commands. But you can just record a macro. I created these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-d&lt;/code&gt; – &lt;a href=&#34;as a macro&#34;&gt;DeleteCharacter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-k&lt;/code&gt; – &lt;a href=&#34;as a macro&#34;&gt;KillLine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here&amp;rsquo;s the procedure, in MS Word 2011 for Mac.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Tools → Macros → Record Macro&lt;/li&gt;
&lt;li&gt;Give it a name with no spaces&lt;/li&gt;
&lt;li&gt;Click the keyboard button to assign a keystroke to it&lt;/li&gt;
&lt;li&gt;Select OK&lt;/li&gt;
&lt;li&gt;Type the set of key strokes&lt;/li&gt;
&lt;li&gt;Tools → Macros → Stop Recording&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://sourceforge.net/apps/mediawiki/womacs/index.php&#34;&gt;Womacs&lt;/a&gt; is a really extensive set of Visual Basic macros that looks really useful, but I was getting Visual Basic errors and didn&amp;rsquo;t want to spend any more time on it; grants to write&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fixing a font problem for XeLaTeX</title>
      <link>/2013/10/11/fixing-a-font-problem-for-xelatex/</link>
      <pubDate>Fri, 11 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/10/11/fixing-a-font-problem-for-xelatex/</guid>
      <description>

&lt;p&gt;If the topic sounds boring, well, it is really boring. I write it down here in case it&amp;rsquo;s useful to someone.&lt;/p&gt;

&lt;p&gt;I was working on a &lt;a href=&#34;http://github.com/syounkin/GitPrimer.git&#34;&gt;talk about git &amp;amp; GitHub&lt;/a&gt;, and chose a different font (Helvetica Neue, sort of the default Apple font). I think the default font for LaTeX/Beamer is a bit too tall and thin for slides. Here&amp;rsquo;s the default:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/10/slide_default.png&#34; alt=&#34;Slide with default font&#34; /&gt;&lt;/p&gt;

&lt;p&gt;And here&amp;rsquo;s what I wanted:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/10/slide_helveticaneue.png&#34; alt=&#34;Slide with Helvetica Neue&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;but-it-didn-t-work-on-unix&#34;&gt;But it didn&amp;rsquo;t work on unix&lt;/h3&gt;

&lt;p&gt;It worked fine with XeLaTeX on my Mac, but it wasn&amp;rsquo;t working in Unix, and I&amp;rsquo;d like the source to be portable to others.&lt;/p&gt;

&lt;p&gt;XeLaTex was giving two errors:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Invalid fontname `Helvetica Neue&#39;, contains &#39; &#39;

Font \zf@basefont=&amp;quot;Helvetica Neue&amp;quot; at 10.0pt not loadable: Metric (TFM) file
or installed font not found.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It obviously wasn&amp;rsquo;t finding the font.&lt;/p&gt;

&lt;p&gt;I futzed about for an hour, trying to figure out where fonts are located on my Mac, and where fonts are located on Unix, and doing various web searches. But no luck.&lt;/p&gt;

&lt;h3 id=&#34;how-i-solved-the-problem&#34;&gt;How I solved the problem&lt;/h3&gt;

&lt;p&gt;Finally, I read &lt;a href=&#34;http://existentialtype.net/2008/07/12/fonts-in-latex-part-one-xelatex/&#34;&gt;this post on fonts in xelatex&lt;/a&gt;, and following that set of ideas, I figured out what to do.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Switch to the &lt;a href=&#34;http://www.gust.org.pl/projects/e-foundry/tex-gyre/heros/index_html&#34;&gt;TeX Gyre Heros&lt;/a&gt; font. It looks just like Helvetica to me.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Download &lt;a href=&#34;http://www.gust.org.pl/projects/e-foundry/tex-gyre/heros/qhv2.004otf.zip&#34;&gt;&lt;code&gt;qhv2.004otf.zip&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;On unix, unzip the file (which contains eight &lt;a href=&#34;http://en.wikipedia.org/wiki/OpenType&#34;&gt;&lt;code&gt;.otf&lt;/code&gt;&lt;/a&gt; files) into &lt;code&gt;~/.fonts&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;On Mac, unzip the file, double-click the &lt;code&gt;.otf&lt;/code&gt; files and select &amp;ldquo;Install font.&amp;rdquo;  This uses the &lt;a href=&#34;http://support.apple.com/kb/HT2509&#34;&gt;Font Book&lt;/a&gt; application.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In the &lt;code&gt;.tex&lt;/code&gt; file, use &lt;code&gt;\setsansfont{TeX Gyre Heros}&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not thoroughly tested, but it works on two systems.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Code review</title>
      <link>/2013/09/25/code-review/</link>
      <pubDate>Wed, 25 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/09/25/code-review/</guid>
      <description>

&lt;p&gt;There was an &lt;a href=&#34;http://www.nature.com/news/mozilla-plan-seeks-to-debug-scientific-code-1.13812&#34;&gt;interesting news item&lt;/a&gt; in Nature on &lt;a href=&#34;http://en.wikipedia.org/wiki/Code_review&#34;&gt;code review&lt;/a&gt;.  It describes a project by some folks at Mozilla to review the code (well, really just 200-line snippets) from 6 selected papers in computational biology.&lt;/p&gt;

&lt;p&gt;There are very brief quotes from &lt;a href=&#34;http://ivory.idyll.org/blog/&#34;&gt;Titus Brown&lt;/a&gt; and &lt;a href=&#34;http://www.biostat.jhsph.edu/~rpeng/&#34;&gt;Roger Peng&lt;/a&gt;.  I expect that the author of the item, &lt;a href=&#34;http://www.nature.com/nature/about/editors/index.html#ErikaCheckHayden&#34;&gt;Erika Check Hayden&lt;/a&gt;, spoke to Titus and Roger at length but could just include short bits from each, and so what they say probably doesn&amp;rsquo;t fully (or much at all) characterize their view of the issue.&lt;/p&gt;

&lt;p&gt;Titus is quoted as follows, in reference to another scientist who retracted five papers due to an error in his code:&lt;/p&gt;

&lt;blockquote&gt;&#34;That&#39;s the kind of thing that should freak any scientist out.... We don&#39;t have good processes in place to detect that kind of thing in software.&#34;&lt;/blockquote&gt;

&lt;p&gt;Roger is quoted at the end, as follows:&lt;/p&gt;

&lt;blockquote&gt;&#34;One worry I have is that, with reviews like this, scientists will be even more discouraged from publishing their code.... We need to get more code out there, not improve how it looks.&#34;&lt;/blockquote&gt;

&lt;p&gt;I agree with both of them, but my initial reaction, from the beginning of the piece, was closer to Roger&amp;rsquo;s: We often have a heck of time getting any code out of people; if we are too hard on people regarding the quality of their code, they might become even less willing to share.&lt;/p&gt;

&lt;p&gt;On the one hand, we want people to produce good code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;that works&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;that&amp;rsquo;s readable&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;that&amp;rsquo;s reusable&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And it would be great if, for every bit of code, there was a second programmer who studied it, verified that it was doing the right thing, and offered suggestions for improvement.&lt;/p&gt;

&lt;p&gt;But, on the other hand, it seems really unlikely that journals have the resources to do this. And I worry that a study showing that much scientific software is crap will make people even less willing to share.&lt;/p&gt;

&lt;p&gt;I would like to see the code associated with scientific articles made readily available, during the review process and beyond. But I don&amp;rsquo;t think we (as a scientific community) want to enforce rigorous code review prior to publication.&lt;/p&gt;

&lt;p&gt;Later, on twitter, &lt;a href=&#34;https://twitter.com/ctitusbrown/status/382862626692149248&#34;&gt;Titus took issue&lt;/a&gt; with the &amp;ldquo;not improve how it looks&amp;rdquo; part of what Roger said:&lt;/p&gt;

&lt;blockquote&gt;&#34;.@kwbroman @simplystats @rdpeng Please read &lt;http://en.wikipedia.org/wiki/Code_review&gt; you are deeply, significantly, and completely wrong about code review.&#34;&lt;/blockquote&gt;

&lt;p&gt;Characterizing code review as strictly cosmetic was an unfortunate, gross simplification. (And how code looks &lt;em&gt;is&lt;/em&gt; important.)&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t have enough time this morning to really clean up my thoughts on this issue, and I want to get this out and move on to reading that dissertation that I have to get through by tomorrow. So, let me summarize.&lt;/p&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;We want scientific code to be &lt;em&gt;well written&lt;/em&gt;: does what it&amp;rsquo;s intended to do, readable, reusable.&lt;/p&gt;

&lt;p&gt;We want scientific code to be &lt;em&gt;available&lt;/em&gt;. (Otherwise we can&amp;rsquo;t verify that it does what it&amp;rsquo;s intended to do, or reuse it.)&lt;/p&gt;

&lt;p&gt;If we&amp;rsquo;re too hard on people for writing substandard code, we&amp;rsquo;ll discourage the availability. It&amp;rsquo;s an important trade-off.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Electronic lab notebook</title>
      <link>/2013/08/20/electronic-lab-notebook/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/20/electronic-lab-notebook/</guid>
      <description>

&lt;p&gt;I was interested to read &lt;a href=&#34;http://ivory.idyll.org&#34;&gt;C. Titus Brown&lt;/a&gt;&amp;rsquo;s recent post, &amp;ldquo;&lt;a href=&#34;http://ivory.idyll.org/blog/is-version-control-an-electronic-lab-notebook.html&#34;&gt;Is version control an electronic lab notebook?&lt;/a&gt;&amp;ldquo;&lt;/p&gt;

&lt;p&gt;I think version control &lt;em&gt;is&lt;/em&gt; really important, and I think all computational scientists &lt;em&gt;should&lt;/em&gt; have something equivalent to a lab notebook. But I think of version control as serving needs orthogonal to those served by a lab notebook.&lt;/p&gt;

&lt;p&gt;As Titus points out, a traditional lab notebook serves two purposes: provenance and protocol. Version control could be useful for provenance, but I don&amp;rsquo;t really care about provenance. And for protocol, version control doesn&amp;rsquo;t really matter.&lt;/p&gt;

&lt;h3 id=&#34;version-control&#34;&gt;Version control&lt;/h3&gt;

&lt;p&gt;I really like &lt;a href=&#34;http://git-scm.com/&#34;&gt;git&lt;/a&gt; with &lt;a href=&#34;http://github.com&#34;&gt;github&lt;/a&gt;. (See &lt;a href=&#34;http://kbroman.github.io/github_tutorial/&#34;&gt;my tutorial&lt;/a&gt;.) But for me, the basic need served by version control  is that embodied in the question, &amp;ldquo;This shit worked before; why isn&amp;rsquo;t it working now?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;You don&amp;rsquo;t want to edit working code &lt;em&gt;in place&lt;/em&gt; and so possibly break a working system. Version control lets you try things out, and to try something out in any version of your software, from any point in time.&lt;/p&gt;

&lt;p&gt;The other basic use of version control is for managing projects with multiple contributors. If there are multiple programmers working on a software project, or multiple authors working on a manuscript, version control is the best way to manage things, particularly for merging everyone&amp;rsquo;s efforts.&lt;/p&gt;

&lt;p&gt;These are really useful things, but version control is more about &lt;em&gt;merging&lt;/em&gt; and &lt;em&gt;history&lt;/em&gt; and not so much &lt;em&gt;reproducible research&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;make-is-the-thing&#34;&gt;Make is the thing&lt;/h3&gt;

&lt;p&gt;To me, the basic tool to make research reproducible is &lt;a href=&#34;http://www.gnu.org/software/make/&#34;&gt;GNU make&lt;/a&gt; (see my &lt;a href=&#34;http://kbroman.github.io/minimal_make/&#34;&gt;minimal tutorial&lt;/a&gt;). You create a &lt;code&gt;Makefile&lt;/code&gt; that documents all analysis steps in a project. (For example, &amp;ldquo;Use this script to turn these raw data files into that combined file, and use this script to create figure 1 and that script to create figure 2, then combine them with this LaTeX file to make the manuscript PDF.&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;With GNU make (see also &lt;a href=&#34;http://rake.rubyforge.org/&#34;&gt;rake&lt;/a&gt;), you both document and automate these processes. With well-documented/commented scripts and an all-encompassing &lt;code&gt;Makefile&lt;/code&gt;, the research is reproducible.&lt;/p&gt;

&lt;h3 id=&#34;add-knitr-and-you-ve-got-a-notebook&#34;&gt;Add knitr, and you&amp;rsquo;ve got a notebook&lt;/h3&gt;

&lt;p&gt;The other ingredient to create the computational scientist&amp;rsquo;s equivalent of a lab notebook is &lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;knitr&lt;/a&gt;, which allows one to combine text (e.g., in &lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; or &lt;a href=&#34;http://www.methods.co.nz/asciidoc/&#34;&gt;asciidoc&lt;/a&gt;) and code (e.g., in &lt;a href=&#34;http://www.r-project.org&#34;&gt;R&lt;/a&gt;) to make documents (e.g., in html or PDF) that both &lt;em&gt;do&lt;/em&gt; the work and &lt;em&gt;explain&lt;/em&gt; the work. Write such documents to describe what you did and what you learned, and you&amp;rsquo;ve got an electronic lab notebook.&lt;/p&gt;

&lt;p&gt;You could even get rid of your &lt;code&gt;Makefile&lt;/code&gt; by having an over-arching knitr-based document that does it all.  But I still like &lt;a href=&#34;http://www.gnu.org/software/make&#34;&gt;make&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;but-it-s-so-much-work&#34;&gt;But it&amp;rsquo;s so much work!&lt;/h3&gt;

&lt;p&gt;Going into a file and deleting a data point is a lot easier than writing a script that does it (and also documents &lt;em&gt;why&lt;/em&gt;). But I don&amp;rsquo;t think you should be going in and changing the data like that, even if it is being tracked by version control. (And that is the main complaint potential users have about version control: &amp;ldquo;Too time consuming!&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;I think you have to expect that writing well-documented scripts and &lt;a href=&#34;http://yihui.name/knitr/&#34;&gt;knitr&lt;/a&gt;-based reports that capture the totality of a data analysis project will take a lot of work: perhaps double (or more!) the effort. But it will save a ton of time later (if others care about what you did).&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t really want to take this time in the midst of a bout of exploratory data analysis. I find it too inhibiting. So I tend to do a bunch of analyses, capturing the main ideas in a draft R script (or reconstructed later from the &lt;code&gt;.Rhistory&lt;/code&gt; file), and then go back later to make a clean knitr-based document that explains what I was doing and why.&lt;/p&gt;

&lt;p&gt;It can be hard to force myself to do the clean-up. I wish there were an easier way. But I expect that well-organized lab scientists devote a lot of time to constructing their lab notebooks, too.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Read the source code</title>
      <link>/2013/08/06/read-the-source-code/</link>
      <pubDate>Tue, 06 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/08/06/read-the-source-code/</guid>
      <description>&lt;p&gt;The other day, there was a bit of &lt;a href=&#34;https://twitter.com/hspter/status/363015797204992000&#34;&gt;a twitter conversation about &lt;code&gt;qqline&lt;/code&gt;&lt;/a&gt; in R.&lt;/p&gt;

&lt;p&gt;It made me think: how exactly is the line produced by &lt;code&gt;qqline&lt;/code&gt; chosen? I seemed to recall that the line was through the first and third quartiles.&lt;/p&gt;

&lt;p&gt;An advantage of R is that you can just type the name of the function and see the code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# qqline
function (y, datax = FALSE, distribution = qnorm, probs = c(0.25,
    0.75), qtype = 7, ...)
{
    stopifnot(length(probs) == 2, is.function(distribution))
    y &amp;lt;- quantile(y, probs, names = FALSE, type = qtype, na.rm = TRUE)
    x &amp;lt;- distribution(probs)
    if (datax) {
        slope &amp;lt;- diff(x)/diff(y)
        int &amp;lt;- x[1L] - slope * y[1L]
    }
    else {
        slope &amp;lt;- diff(y)/diff(x)
        int &amp;lt;- y[1L] - slope * x[1L]
    }
    abline(int, slope, ...)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was right: They take the 25th and 75th percentiles of the data and of the theoretical distribution, calculate the slope and y-intercept of the line that goes through those two points, and use &lt;code&gt;abline&lt;/code&gt; to draw the line.&lt;/p&gt;

&lt;p&gt;Open source means the source is open, so why not take the time to look at it?&lt;/p&gt;

&lt;p&gt;Sometimes typing the name of the function doesn&amp;rsquo;t tell you much:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# qqnorm
function (y, ...)
UseMethod(&amp;quot;qqnorm&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In such cases, you could try typing, for example, &lt;code&gt;qqnorm.default&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Still, the comments (if there were any) get stripped off, and for long functions, it&amp;rsquo;s not pretty.  So I like to keep a copy of the source code (for example, &lt;a href=&#34;http://cran.r-project.org/src/base/R-3/R-3.0.1.tar.gz&#34;&gt;&lt;code&gt;R-3.0.1.tar.gz&lt;/code&gt;&lt;/a&gt;; extract it with &lt;code&gt;tar xzf R-3.0.1.tar.gz&lt;/code&gt;). I use &lt;code&gt;grep&lt;/code&gt; to find the relevant files.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grep -r &#39;qqline&#39; R-3.0.1/src/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;shows that I should look for &lt;code&gt;qqline&lt;/code&gt; in&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;R-3.0.1/src/library/stats/R/qqnorm.R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For something like &lt;code&gt;cor&lt;/code&gt;, you might want to do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grep -r &#39;cor &amp;lt;-&#39; R-3.0.1/src
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or maybe:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grep -r &#39;cor &amp;lt;-&#39; R-3.0.1/src/library/stats/R
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But for &lt;code&gt;cor&lt;/code&gt;, you probably also want to look at the C code, which is in&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;R-3.0.1/src/library/stats/src/cov.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can learn a lot about programming from the source code for R.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stack Exchange: Why I dropped out</title>
      <link>/2013/05/13/stack-exchange-why-i-dropped-out/</link>
      <pubDate>Mon, 13 May 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/05/13/stack-exchange-why-i-dropped-out/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://stackexchange.com&#34;&gt;Stack Exchange&lt;/a&gt; is a series of question-and-answer sites, including &lt;a href=&#34;http://stackoverflow.com&#34;&gt;Stack Overflow&lt;/a&gt; for programming and &lt;a href=&#34;http://stats.stackexchange.com/&#34;&gt;Cross Validated&lt;/a&gt; for statistics.  I was &lt;a href=&#34;http://kbroman.org/blog/2011/09/26/gamified/&#34;&gt;introduced to these sites&lt;/a&gt; at a short talk by &lt;a href=&#34;http://geospaced.blogspot.com/&#34;&gt;Barry Rowlingson&lt;/a&gt; at the 2011 UseR! meeting, &amp;ldquo;Why R-help must die!&amp;rdquo;&lt;/p&gt;

&lt;p&gt;These sites have a lot of advantages over R-help: The format is easier to read, math and code can be nicely formatted, the questions are tagged, search is easier, and there should be less redundancy.&lt;/p&gt;

&lt;h3 id=&#34;additional-pros&#34;&gt;Additional pros&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It&amp;rsquo;s good to help people.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;It&amp;rsquo;s fun to rack up reputation points for helping people.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;It&amp;rsquo;s good exercise, in both thinking about statistical questions and in articulating useful answers (and there are some interesting questions).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;however-some-cons&#34;&gt;However, some cons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The reputation points thing is a bit too addictive to me.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The easy questions go fast; you have to watch constantly if you want a chance at them.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Far too many questions are either dreadfully dull or terribly sloppy.
(See &lt;a href=&#34;http://jeromyanglim.blogspot.com/&#34;&gt;Jeromy Anglim&lt;/a&gt;&amp;rsquo;s &amp;ldquo;&lt;a href=&#34;http://jeromyanglim.blogspot.com.au/2011/03/how-to-ask-me-statistics-question.html&#34;&gt;How to ask me a statistics question&lt;/a&gt;&amp;rdquo; and &lt;a href=&#34;http://catb.org/~esr/&#34;&gt;Eric S. Raymond&lt;/a&gt;&amp;rsquo;s &amp;ldquo;&lt;a href=&#34;http://catb.org/~esr/faqs/smart-questions.html&#34;&gt;How to ask questions the smart way&lt;/a&gt;.&amp;ldquo;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Good answers are, at times, insufficiently appreciated.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;so-i-gave-up&#34;&gt;So I gave up&lt;/h3&gt;

&lt;p&gt;I started spending time on &lt;a href=&#34;http://stackoverflow.com&#34;&gt;stackoverflow&lt;/a&gt; and &lt;a href=&#34;http://stats.stackexchange.com&#34;&gt;cross-validated&lt;/a&gt; soon after returning from UseR! 2011, but I lost my patience and quit within three months.&lt;/p&gt;

&lt;p&gt;One needs to treat each question with respect, and I eventually seemed to lose my ability to sustain such goodwill.  I think I take things too personally.&lt;/p&gt;

&lt;h3 id=&#34;update&#34;&gt;Update&lt;/h3&gt;

&lt;p&gt;I should clarify: I &lt;em&gt;do&lt;/em&gt; continue to use Stack Exchange, mostly through google.  Many problems I run into have already been answered.  I just don&amp;rsquo;t have the right temperament to participate regularly in answering others&amp;rsquo; questions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorials on git/github and GNU make</title>
      <link>/2013/05/10/tutorials-on-gitgithub-and-gnu-make/</link>
      <pubDate>Fri, 10 May 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/05/10/tutorials-on-gitgithub-and-gnu-make/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re not using version control, you should be.  &lt;em&gt;Learn &lt;a href=&#34;http://git-scm.com&#34;&gt;git&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re not on &lt;a href=&#34;http://github.com&#34;&gt;github&lt;/a&gt;, you should be.  That&amp;rsquo;s &lt;em&gt;real&lt;/em&gt; open source.&lt;/p&gt;

&lt;p&gt;To help some colleagues get started with &lt;a href=&#34;http://git-scm.com&#34;&gt;git&lt;/a&gt; and &lt;a href=&#34;http://github.com&#34;&gt;github&lt;/a&gt;, I wrote a &lt;a href=&#34;http://kbroman.github.io/github_tutorial&#34;&gt;minimal tutorial&lt;/a&gt;. There are lots of git and github resources available, but I thought I&amp;rsquo;d give just the bare minimum to get started; after using git and github for a while, other resources make a lot more sense and seem much more worthwhile.&lt;/p&gt;

&lt;p&gt;And for &lt;a href=&#34;http://r-project.org&#34;&gt;R&lt;/a&gt; folks, note that it&amp;rsquo;s easy to install R packages that are hosted on github, using &lt;a href=&#34;http://had.co.nz&#34;&gt;Hadley Wickham&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/hadley/devtools&#34;&gt;devtools&lt;/a&gt; package.  For example, to install &lt;a href=&#34;https://github.com/nachocab&#34;&gt;Nacho Caballero&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/nachocab/clickme&#34;&gt;clickme&lt;/a&gt; package:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;devtools&amp;quot;)
library(devtools)
install_github(&amp;quot;clickme&amp;quot;, &amp;quot;nachocab&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Having written that git/github tutorial, I thought: I should write more such!&lt;/p&gt;

&lt;p&gt;So I immediately wrote &lt;a href=&#34;http://kbroman.github.io/minimal_make&#34;&gt;a similar short tutorial&lt;/a&gt; on &lt;a href=&#34;http://www.gnu.org/software/make&#34;&gt;GNU make&lt;/a&gt;, which I think is the &lt;em&gt;most important tool&lt;/em&gt; for reproducible research.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data structures are important</title>
      <link>/2013/03/19/data-structures-are-important/</link>
      <pubDate>Tue, 19 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/03/19/data-structures-are-important/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve created another &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt; example, of QTL analysis for a phenotype measured over time. (Click on the image for the &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/lod_by_time&#34;&gt;interactive version&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/lod_by_time&#34;&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/03/lod_by_time.png&#34; alt=&#34;QTL analysis with phenotype over time&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code is on &lt;a href=&#34;https://github.com/kbroman/d3examples/tree/master/lod_by_time&#34;&gt;github&lt;/a&gt;. It took me about a day.&lt;/p&gt;

&lt;p&gt;The hardest part was figuring out the right data structures.  A pixel here is linked to curves over there and over there and over there.  You need to set things up so it&amp;rsquo;s easy to traverse such linkages.&lt;/p&gt;

&lt;p&gt;If you hover over a point in the top-left image, you get views of the vertical and horizontal cross-sections.  If you click on a point, pointwise confidence bands are added to the &amp;ldquo;QTL effect&amp;rdquo; plot.  (You have to click, because if I included those confidence bands automatically, the graph became painfully slow to refresh.)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not completely happy with the layout of the graph; it&amp;rsquo;s not particularly intuitive.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LaTeX &#43; Unicode → XeTeX</title>
      <link>/2013/03/19/latex-unicode--xetex/</link>
      <pubDate>Tue, 19 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/03/19/latex-unicode--xetex/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m co-organizing &lt;a href=&#34;http://www.ctc2013.org&#34;&gt;a scientific meeting&lt;/a&gt; at the end of May.  The abstracts are all in.&lt;/p&gt;

&lt;p&gt;We get them in an Excel file, and I was working on a Perl script to parse the file to create a LaTeX file with the abstracts, so we could have nicely formatted versions for review.  (I&amp;rsquo;m using &lt;a href=&#34;http://search.cpan.org/~dmow/Spreadsheet-XLSX-0.13-withoutworldwriteables/lib/Spreadsheet/XLSX.pm&#34;&gt;Spreadsheet:XLSX&lt;/a&gt; for the first time; it&amp;rsquo;s really easy.  Why have I always converted Excel files to CSV before parsing them?)&lt;/p&gt;

&lt;p&gt;I spent way too much time trying to deal with special characters.  I was looking to do a search-and-replace for all possible &lt;a href=&#34;http://en.wikipedia.org/wiki/Unicode&#34;&gt;Unicode&lt;/a&gt; characters (for example, to change &lt;code&gt;\xE9&lt;/code&gt; aka e into &lt;code&gt;\&#39;{e}&lt;/code&gt;, or &lt;code&gt;\xD7&lt;/code&gt; aka × into &lt;code&gt;$\times$&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/03/times_symbol.png&#34; alt=&#34;MBT/Pas × BALB/cByJ&#34; /&gt;&lt;/p&gt;

&lt;p&gt;But then I discovered that &lt;a href=&#34;http://en.wikipedia.org/wiki/XeTeX&#34;&gt;XeTeX&lt;/a&gt; supports Unicode, so there&amp;rsquo;s no need to do these sorts of substitutions.&lt;/p&gt;

&lt;p&gt;I changed &lt;code&gt;pdflatex&lt;/code&gt; to &lt;code&gt;xelatex&lt;/code&gt; in my &lt;code&gt;Makefile&lt;/code&gt;, and I&amp;rsquo;m done.  I think.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update&lt;/em&gt;: Now that I think about it, CSV is way more convenient than XLS(X) for simple data files, as you don&amp;rsquo;t have to traverse with the whole &lt;code&gt;$cell -&amp;gt; (Val)&lt;/code&gt; business.  But working with the Excel file directly is easier when the cells may contain lots of text with commas and such, like my abstracts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why aren&#39;t all of our graphs interactive?</title>
      <link>/2013/03/16/why-arent-all-of-our-graphs-interactive/</link>
      <pubDate>Sat, 16 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/03/16/why-arent-all-of-our-graphs-interactive/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve come to believe that, for high-dimensional data, visualizations (aka graphs), and particularly interactive graphs, can be more important than precise statistical inference.&lt;/p&gt;

&lt;p&gt;We first need to be able to view and explore the data, and when it is unusually abundant, that is especially hard.  This was a primary contributor to &lt;a href=&#34;http://kbroman.org/blog/2012/04/25/microarrays-suck/&#34;&gt;my recent embarrassments&lt;/a&gt;, in which clear problems in the data were not discovered when they should have been.&lt;/p&gt;

&lt;p&gt;I gave &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/presentations/InteractiveGraphs&#34;&gt;a talk on interactive graphs (with the title above)&lt;/a&gt; at Johns Hopkins last fall, and then &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/presentations/InteractiveGraphs2&#34;&gt;a related talk&lt;/a&gt; at ENAR earlier this week, and I have a few thoughts to add here.&lt;/p&gt;

&lt;h3 id=&#34;a-brief-digression&#34;&gt;A brief digression&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m giving a talk at a plant breeding symposium at Kansas State in a couple of weeks, and I&amp;rsquo;ve been pondering what to talk about.  A principal problem is that I don&amp;rsquo;t really work on plant breeding.  My most relevant talks are a bit too technical, and my more interesting talks are not relevant.&lt;/p&gt;

&lt;p&gt;Then I had the idea to talk about some of my recent work with my graduate student, Il-youp Kwak, on the genetic analysis of phenotypes measured over time.&lt;/p&gt;

&lt;p&gt;I realized that I could incorporate some interactive graphs into the talk.  Initially I was just thinking that the interactive graphs would make the talk more interesting and would allow me to talk about things that weren&amp;rsquo;t necessarily relevant but were interesting to me.&lt;/p&gt;

&lt;p&gt;But then I realized that this work really cries out for interactive graphs.  And as I begin to construct one of them, I thought of a whole bunch more I might create.  More importantly, I realized that these interactive graphs are extremely useful teaching tools.&lt;/p&gt;

&lt;h3 id=&#34;more-d3-http-d3js-org-examples&#34;&gt;More &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt; examples&lt;/h3&gt;

&lt;p&gt;Here&amp;rsquo;s an image of first graph I created for the talk; click on it to jump to the &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/manycurves&#34;&gt;interactive version&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Statisticians are often confronted with a large set of curves.  We&amp;rsquo;d like to show the individual curves, but there are too many.  The resulting &lt;a href=&#34;http://www.ats.ucla.edu/stat/stata/faq/spagplot.htm&#34;&gt;spaghetti plot&lt;/a&gt; is a total mess.  An image plot (like the &lt;a href=&#34;http://journals.lww.com/epidem/Fulltext/2010/09000/Lasagna_Plots__A_Saucy_Alternative_to_Spaghetti.15.aspx&#34;&gt;lasagna plot&lt;/a&gt;) allows us to see all of the curves, but it can be hard to get a sense of what the actual curves look like.  The interactive version solves the problem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/manycurves&#34;&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/03/manycurves2.png&#34; alt=&#34;Many curves&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a second example; again click on the image to jump to the &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/lod_and_effect&#34;&gt;interactive version&lt;/a&gt;. (I&amp;rsquo;ve shown this before, but I want to use it to make another point.)&lt;/p&gt;

&lt;p&gt;Typically, in a lecture on complex trait analysis, I&amp;rsquo;d show one LOD curve (like the top panel in the image below) and a few different plots of phenotype vs genotype (the lower-right panel in the image).  I think the exploratory tool will be much more effective, in a lecture, for explaining what it all means.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/lod_and_effect&#34;&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/03/lod_and_effect.png&#34; alt=&#34;LOD and QTL effects&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;statisticians-need-to-be-doing-this-routinely&#34;&gt;Statisticians need to be doing this routinely&lt;/h3&gt;

&lt;p&gt;In constructing a graph, one must make some difficult choices.  For high-dimensional data, one must greatly compress the available information.  The resulting summaries, while potentially informative, take one far away from the original data.&lt;/p&gt;

&lt;p&gt;Interactive graphs provide a means through which one may view the overall summary but have immediate access to the underlying details.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interactive eQTL plot with d3.js</title>
      <link>/2013/03/06/interactive-eqtl-plot-with-d3-js/</link>
      <pubDate>Wed, 06 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/03/06/interactive-eqtl-plot-with-d3-js/</guid>
      <description>&lt;p&gt;I just finished an &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/cistrans&#34;&gt;interactive eQTL plot&lt;/a&gt; using &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt;, in preparation for my &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/talks/InteractiveGraphs2&#34;&gt;talk on interactive graphics&lt;/a&gt; at the &lt;a href=&#34;http://www.enar.org/meetings.cfm&#34;&gt;ENAR meeting&lt;/a&gt; next week.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/cistrans&#34;&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/03/interactive_eqtl_plot.png&#34; alt=&#34;Static view of interactive eQTL plot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code (in &lt;a href=&#34;http://coffeescript.org&#34;&gt;CoffeeScript&lt;/a&gt;) is available at &lt;a href=&#34;https://github.com/kbroman/JSbroman/tree/master/cistrans&#34;&gt;github&lt;/a&gt;.  But beware: it&amp;rsquo;s pretty awful.&lt;/p&gt;

&lt;p&gt;The hardest part was setting up the data files.  Well, that plus the fact that I just barely know what I&amp;rsquo;m doing in D3.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>charset=&#34;utf-8&#34;</title>
      <link>/2013/03/02/charsetutf-8/</link>
      <pubDate>Sat, 02 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/03/02/charsetutf-8/</guid>
      <description>&lt;p&gt;To use the latest version of &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt;, you need to use &lt;code&gt;charset=&amp;quot;utf-8&amp;quot;&lt;/code&gt; in the call to &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m giving a talk at &lt;a href=&#34;http://www.enar.org/meetings.cfm&#34;&gt;ENAR&lt;/a&gt; in just over a week, on interactive graphics.  My slides (still in preparation) are &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/presentations/InteractiveGraphs2&#34;&gt;on the web&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The slides were working fine locally on my laptop, but they weren&amp;rsquo;t working on my web server&amp;hellip;I was getting a syntax error regarding an illegal character.&lt;/p&gt;

&lt;p&gt;I figured out that I needed to add &lt;code&gt;charset=&amp;quot;utf-8&amp;quot;&lt;/code&gt;, like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script charset=&amp;quot;utf-8&amp;quot; type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;js/d3.js&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>D3.js difficulties</title>
      <link>/2013/02/08/d3-js-difficulties/</link>
      <pubDate>Fri, 08 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/02/08/d3-js-difficulties/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;m pleased with my progress learning javascript and &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt;. (I&amp;rsquo;m actually writing &lt;a href=&#34;http://coffeescript.org&#34;&gt;coffeescript&lt;/a&gt; rather than javascript.)&lt;/p&gt;

&lt;p&gt;But I spent a lot of time thrashing about yesterday, due mostly to two silly errors.&lt;/p&gt;

&lt;h3 id=&#34;put-the-script-in-the-body&#34;&gt;Put the script in the body&lt;/h3&gt;

&lt;p&gt;First, I&amp;rsquo;d tried to make a &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/error1/error1.html&#34;&gt;truly simple example&lt;/a&gt;, making just an SVG with a little rectangle.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Put script in body&amp;lt;/title&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;
        src=&amp;quot;http://d3js.org/d3.v3.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    var h=50;
    var svg = d3.select(&amp;quot;body&amp;quot;).append(&amp;quot;svg&amp;quot;)
                .attr(&amp;quot;height&amp;quot;, h).attr(&amp;quot;width&amp;quot;, h);
    svg.append(&amp;quot;rect&amp;quot;).attr(&amp;quot;x&amp;quot;, 0).attr(&amp;quot;y&amp;quot;, 0)
                .attr(&amp;quot;height&amp;quot;, h).attr(&amp;quot;width&amp;quot;,h);
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this gives nothing.  You need to move the script from the &lt;code&gt;head&lt;/code&gt; to the &lt;code&gt;body&lt;/code&gt;, &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/error1/error1b.html&#34;&gt;as it is here&lt;/a&gt;.  Then it works.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t really understand this.  Perhaps I should go back to my reading.&lt;/p&gt;

&lt;p&gt;[&lt;strong&gt;Update&lt;/strong&gt;: I think I&amp;rsquo;ve figured this out.  If you put the script in the &lt;code&gt;head&lt;/code&gt;, the code gets run before the &lt;code&gt;body&lt;/code&gt; exists, and so there&amp;rsquo;s no &lt;code&gt;body&lt;/code&gt; in which to append the SVG.  &lt;em&gt;Conclusion&lt;/em&gt;: Put the link to your script at the very bottom of the html file.]&lt;/p&gt;

&lt;h3 id=&#34;don-t-forget-enter&#34;&gt;Don&amp;rsquo;t forget &lt;code&gt;enter()&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;In D3, you bind data to a bunch of objects, and attributes of the objects can be controlled by features of the data.  I write code sort of like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;svg.append(&amp;quot;g&amp;quot;).selectAll(&amp;quot;empty&amp;quot;)
   .data(thedata)
   .enter()
   .append(&amp;quot;rect&amp;quot;)
   .attr(&amp;quot;x&amp;quot;, (d) -&amp;gt; start[d])
   .attr(&amp;quot;y&amp;quot;, pad.top)
   .attr(&amp;quot;width&amp;quot;, (d) -&amp;gt; end[d] - start[d])
   .attr(&amp;quot;height&amp;quot;, (d) -&amp;gt; hInner)
   .attr(&amp;quot;fill&amp;quot;, (d) -&amp;gt; color[d])
   .attr(&amp;quot;stroke&amp;quot;, &amp;quot;none&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My most common mistake so far: I forget the &lt;code&gt;.enter()&lt;/code&gt; part.  You don&amp;rsquo;t get a error message, but the objects don&amp;rsquo;t get created.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interactive graphics with d3.js</title>
      <link>/2013/02/08/interactive-graphics-with-d3-js/</link>
      <pubDate>Fri, 08 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>/2013/02/08/interactive-graphics-with-d3-js/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;m making some progress learning &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt; (for interactive graphics), by which I mean I&amp;rsquo;ve gotten a couple of examples to work.&lt;/p&gt;

&lt;h3 id=&#34;many-box-plots&#34;&gt;Many box plots&lt;/h3&gt;

&lt;p&gt;First, an &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/manyboxplots&#34;&gt;example for displaying many distributions&lt;/a&gt;.  Here I&amp;rsquo;m considering a set of nearly 500 gene expression microarrays, each with 40,000 or so measurements.  It&amp;rsquo;s hard to look at 500 box plots side-by-side, and with 40k measurements, traditional box plots don&amp;rsquo;t give enough information about the tails.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/manyboxplots&#34;&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/02/manyboxplots.png&#34; alt=&#34;Many box plots&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the top figure, the 500 arrays are aligned next to each other, sorted by their median, and then I show the 1, 5, 10, 25 50, &amp;hellip;, 99th percentiles.  The advantage of the interactive plot is that you can hover over a given array on the top and see a more detailed histogram below.  And if you click on an array, its histogram will be retained below, for easy comparison to other arrays.&lt;/p&gt;

&lt;h3 id=&#34;lod-curves-and-qtl-effects&#34;&gt;LOD curves and QTL effects&lt;/h3&gt;

&lt;p&gt;As a &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/lod_and_effect&#34;&gt;second example&lt;/a&gt;, I plot the LOD curves from QTL analysis across the genome; click on a chromosome above and you get a more detailed view of that chromosome in the bottom-left; click on a marker position in the bottom-left, and you get a view of the QTL effect on the bottom-right.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/lod_and_effect&#34;&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2013/02/lod_and_effect1.png&#34; alt=&#34;LOD curves and QTL effects&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Likely none of that is understandable; let me try to explain.  QTL stands for &amp;ldquo;quantitative trait locus,&amp;rdquo; a region of the genome (i.e., locus) that influences some quantitative trait (like insulin level in serum).  To identify QTL, we look at the association between the quantitative trait and genotype at each of many genetic markers across the genome.  We&amp;rsquo;re basically doing analysis of variance, but we express the results as a log10 likelihood ratio, called the LOD score.&lt;/p&gt;

&lt;p&gt;The advantage of this interactive graph is that you have some ability to look at the underlying genotype/phenotype association, rather than just rely on LOD curves.  It would be nice to include the option of a dot-plot on the lower right, rather than just the within-group averages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wireless router woes</title>
      <link>/2012/11/20/wireless-router-woes/</link>
      <pubDate>Tue, 20 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/11/20/wireless-router-woes/</guid>
      <description>&lt;p&gt;I had problems with my internet connection at home this morning.  The usual things didn&amp;rsquo;t work, but an unusual thing did work, so I thought I&amp;rsquo;d write about it.&lt;/p&gt;

&lt;p&gt;My internet connection worked last night, but it didn&amp;rsquo;t work this morning.  I did the usual things: turn off the cable modem and the wireless router, and then turn them back on again.  Turn off the computer and then turn it back on again, and then power cycle the modem and router again.   Go to network settings and renew the DHCP.  None of that worked.&lt;/p&gt;

&lt;p&gt;I called the cable company, to see if there was a problem on their end.  An automated system talked me through the whole turn on/off modem, router and computer.  (I stuck through the whole thing, hoping there might be a trick at the end, but no luck.)  I talked to a tech support person, who had me do the same things again; no luck.  (He did suggest that I call to ask to get a better deal on my services, which I later did, with success, so he made the call worth my time.)&lt;/p&gt;

&lt;p&gt;After getting off the phone with him (and after the kids were out of the house), I tried it all again, and then tried bypassing the router: plugging the computer straight into the cable modem.  I then had internet, so I could see it was a router problem.&lt;/p&gt;

&lt;p&gt;And I could do google searches, but search for &amp;ldquo;router internet connection problem&amp;rdquo; or such things, and you get 19 million pages that all seem to say to do what I&amp;rsquo;d already done and no more.  (I didn&amp;rsquo;t read all 19 million, though.)&lt;/p&gt;

&lt;p&gt;Finally, I found &lt;a href=&#34;http://tinyurl.com/az3ltws&#34;&gt;this page&lt;/a&gt; at this Cisco site, on connecting a Linksys router to a cable modem, which suggests enabling &amp;ldquo;clone my PC&amp;rsquo;s MAC address&amp;rdquo;.  I tried that, and it worked!  (My next plan was to reset the router to the factory settings, after first doing screen shots of all of the settings, so I could get back to how I wanted them; I&amp;rsquo;m glad I didn&amp;rsquo;t have to do that.)&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t know why that worked.  I&amp;rsquo;ve never done that before, and the router worked perfectly fine last night.  What could have changed over night?  Did the cable company change some setting on their end?&lt;/p&gt;

&lt;p&gt;What a fun way to spend two hours!  At least, in the end, I cut 25% off my monthly cable bill.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Curved arrows in R</title>
      <link>/2012/10/11/curved-arrows-in-r/</link>
      <pubDate>Thu, 11 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/10/11/curved-arrows-in-r/</guid>
      <description>&lt;p&gt;I briefly investigated how to draw curved arrows in R. Here&amp;rsquo;s a small piece of the figure that I ultimately created:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2012/10/sample_mix-ups.png&#34; style=&#34;max-width:300px;&#34;&gt;&lt;/p&gt;

&lt;p&gt;A google search for &amp;ldquo;curved arrows in R&amp;rdquo; revealed three options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://rgm2.lab.nig.ac.jp/RGM2/func.php?rd_id=diagram:curvedarrow&#34;&gt;&lt;code&gt;curvedarrow&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&#34;http://cran.r-project.org/web/packages/diagram/&#34;&gt;diagram&lt;/a&gt; package&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The internal function &lt;code&gt;igraph.Arrows&lt;/code&gt; within the &lt;a href=&#34;http://cran.r-project.org/web/packages/igraph&#34;&gt;igraph&lt;/a&gt; package (mentioned by Gabor Csardi &lt;a href=&#34;http://r.789695.n4.nabble.com/Curved-arrows-td886056.html&#34;&gt;in R help&lt;/a&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Using &lt;code&gt;xspline&lt;/code&gt; for the shaft and adding the head &amp;ldquo;by hand&amp;rdquo; (&lt;a href=&#34;http://r.789695.n4.nabble.com/Curved-arrows-tt886056.html#a886057&#34;&gt;mentioned&lt;/a&gt; by Greg Snow)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I wasn&amp;rsquo;t too happy with how the arrow heads looked using the diagram package, and I didn&amp;rsquo;t want to have to fiddle around with &lt;code&gt;xspline&lt;/code&gt;, and igraph worked quite easily, so I went with that.&lt;/p&gt;

&lt;p&gt;Plotting multiple arrows with different colors in a single call to &lt;code&gt;igraph.Arrows&lt;/code&gt; didn&amp;rsquo;t work right (the arrow heads were all the first color), but using a loop and plotting one arrow per call worked fine.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/blog/igraph_arrows.R&#34;&gt;a bit of code I played with&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(igraph)
par(mar=rep(1,4))
plot(0,0, type=&amp;quot;n&amp;quot;,xaxt=&amp;quot;n&amp;quot;, yaxt=&amp;quot;n&amp;quot;, xlab=&amp;quot;&amp;quot;, ylab=&amp;quot;&amp;quot;,
     xlim=c(0,11), ylim=c(1,11))

x &amp;lt;- 1:10
y &amp;lt;- rep(2, 10)

for(k in 0:4)
  points(x, y+k*2)

iArrows &amp;lt;- igraph:::igraph.Arrows

mycolors &amp;lt;- rep(c(&amp;quot;green&amp;quot;, &amp;quot;orange&amp;quot;, &amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;), 3)

for(i in 1:9) {
  iArrows(x[i], y[i], x[i+1], y[i+1],
          h.lwd=2, sh.lwd=2, sh.col=mycolors[i],
          curve=0.5 - (i %% 2), width=1, size=0.7)

  iArrows(x[i], y[i]+2, x[i+1], y[i+1]+2,
          h.lwd=2, sh.lwd=2, sh.col=mycolors[i],
          curve=1 - (i %% 2), width=1, size=0.7)
}

for(i in 1:8) {
  iArrows(x[i], y[i]+4, x[i+2], y[i+2]+4,
          h.lwd=2, sh.lwd=2, sh.col=mycolors[i],
          curve=0.5 - (i %% 2), width=1, size=0.7)

  iArrows(x[i], y[i]+6, x[i+2], y[i+2]+6,
          h.lwd=2, sh.lwd=2, sh.col=mycolors[i],
          curve=1 - 2*(i %% 2), width=1, size=0.7)
}

x1 &amp;lt;- x[1:8]
x2 &amp;lt;- x[3:10]
y &amp;lt;- y[1:8]+8

iArrows(x1, y, x2, y,
        h.lwd=2, sh.lwd=2, sh.col=mycolors[1:8],
        curve=1 - 2*((1:8) %% 2), width=1, size=0.7)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here&amp;rsquo;s the corresponding figure:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2012/10/igraph_arrows1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Note that the arrows at the top all have green arrow heads.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning a new language</title>
      <link>/2012/06/21/learning-a-new-language/</link>
      <pubDate>Thu, 21 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/06/21/learning-a-new-language/</guid>
      <description>&lt;p&gt;It had been a very long time since I&amp;rsquo;d tried to learn a new programming language. I started C in 1987, S in 1992, and Perl in 1997, but nothing really new in the subsequent 15 years.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.thebird.nl/&#34;&gt;A friend&lt;/a&gt; now has me doing &lt;a href=&#34;http://dlang.org&#34;&gt;D&lt;/a&gt;, wanting to find time to learn &lt;a href=&#34;http://www.ruby-lang.org&#34;&gt;ruby&lt;/a&gt;, and, most recently, playing with &lt;a href=&#34;https://developer.mozilla.org/en/JavaScript/Reference&#34;&gt;JavaScript&lt;/a&gt; and &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m really excited about &lt;a href=&#34;http://d3js.org&#34;&gt;D3&lt;/a&gt;. It&amp;rsquo;s long past time for dynamic, interactive graphics to be routine. And with D3, I think it can be.&lt;/p&gt;

&lt;p&gt;The object-oriented stuff is most foreign to me.  When your programming skills are stuck in the early 90s, there&amp;rsquo;s a lot to catch up on.  It&amp;rsquo;s hard to adapt to a new way of thinking.  But I&amp;rsquo;ve used &amp;ldquo;&lt;code&gt;this&lt;/code&gt;&amp;rdquo; a couple of times, which makes me feel quite accomplished.&lt;/p&gt;

&lt;p&gt;The hardest part has been slowing myself down; I&amp;rsquo;m too impatient. It&amp;rsquo;s critical to have a challenging problem for motivation, but I tend to want to jump into complicated things when I should be a bit more methodical.&lt;/p&gt;

&lt;p&gt;I want to make things like &lt;a href=&#34;http://mbostock.github.com/d3/talk/20111018/collision.html&#34;&gt;this&lt;/a&gt;. (I don&amp;rsquo;t really see a use for it yet, but it&amp;rsquo;s fun.)  So I start mucking about with code that I don&amp;rsquo;t yet understand and end up going nowhere for hours.&lt;/p&gt;

&lt;p&gt;The important thing is that I&amp;rsquo;m having fun; eventually I&amp;rsquo;ll be able to usefully apply some new skills.  For now I&amp;rsquo;ve got this: [&lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/lod_curve.html&#34;&gt;Click&lt;/a&gt; for the dynamic version.]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/D3/lod_curve.html&#34;&gt;&lt;img src=&#34;http://kbroman.files.wordpress.com/2012/06/lod_curve1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PS: I really like &lt;a href=&#34;http://alignedleft.com/tutorials/d3/&#34;&gt;Scott Murray&amp;rsquo;s tutorials on D3&lt;/a&gt;. After working through those, &lt;a href=&#34;https://github.com/mbostock/d3/wiki/Tutorials&#34;&gt;other tutorials&lt;/a&gt; became much more understandable.  &lt;a href=&#34;http://eloquentjavascript.net/&#34;&gt;Eloquent JavaScript&lt;/a&gt; is a super-cool, open source, interactive text on JavaScript; also take a look at the &amp;ldquo;fork&amp;rdquo; for &lt;a href=&#34;http://coffeescript.org/&#34;&gt;CoffeeScript&lt;/a&gt;, &lt;a href=&#34;http://autotelicum.github.com/Smooth-CoffeeScript/&#34;&gt;Smooth CoffeeScript&lt;/a&gt;.  (I&amp;rsquo;m thinking I&amp;rsquo;ll switch to CoffeeScript once I&amp;rsquo;ve learned a bit of JavaScript; the useful libraries and examples are mostly in JavaScript.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A course in statistical programming</title>
      <link>/2012/05/25/a-course-in-statistical-programming/</link>
      <pubDate>Fri, 25 May 2012 00:00:00 +0000</pubDate>
      
      <guid>/2012/05/25/a-course-in-statistical-programming/</guid>
      <description>&lt;p&gt;Graduate students in statistics often take (or at least have the opportunity to take) a statistical computing course, but often such courses are focused on methods (like numerical linear algebra, the EM algorithm, and MCMC) and not on actual coding.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman/teaching/statcomp/index.html&#34;&gt;here&amp;rsquo;s a course in &amp;ldquo;advanced statistical computing&amp;rdquo;&lt;/a&gt; that I taught at &lt;a href=&#34;http://www.biostat.jhsph.edu&#34;&gt;Johns Hopkins&lt;/a&gt; back in 2001.&lt;/p&gt;

&lt;p&gt;Many (perhaps most) good programmers learned to code outside of formal courses.  But many statisticians are terrible programmers and would benefit by a formal course.&lt;/p&gt;

&lt;p&gt;Moreover, applied statisticians spend the vast majority of their time interacting with a computer and would likely benefit from more formal presentations of how to do it well.  And I think this sort of training is particularly important for ensuring that &lt;a href=&#34;https://groups.google.com/forum/?fromgroups#!forum/reproducible-research&#34;&gt;research is reproducible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One really learns to code in private, struggling over problems, but I benefited enormously from a statistical computing course I took from &lt;a href=&#34;http://www.stat.berkeley.edu/~spector/&#34;&gt;Phil Spector&lt;/a&gt; at &lt;a href=&#34;http://www.stat.berkeley.edu&#34;&gt;Berkeley&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.biostat.jhsph.edu/~bcaffo&#34;&gt;Brian Caffo&lt;/a&gt;, &lt;a href=&#34;http://www.biostat.jhsph.edu/~iruczins/&#34;&gt;Ingo Ruczinski&lt;/a&gt;, &lt;a href=&#34;http://www.biostat.jhsph.edu/~rpeng&#34;&gt;Roger Peng&lt;/a&gt;, &lt;a href=&#34;http://www.biostat.jhsph.edu/~ririzarr/&#34;&gt;Rafael Irizarry&lt;/a&gt;, and &lt;a href=&#34;http://www.biostat.wisc.edu/~kbroman&#34;&gt;I&lt;/a&gt; developed a &lt;a href=&#34;http://www.biostat.jhsph.edu/~bcaffo/statcomp/&#34;&gt;statistical programming course&lt;/a&gt; at Hopkins that (I think) really did the job.&lt;/p&gt;

&lt;p&gt;I would like to develop a similar such course at &lt;a href=&#34;http://www.biostat.wisc.edu&#34;&gt;Wisconsin&lt;/a&gt;: on statistical programming, in the most general sense.&lt;/p&gt;

&lt;p&gt;I have in mind several basic principles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;be self-sufficient&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;get the right answer&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;document what you did (so that you will understand what you did 6 months later)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;if primary data change, be able to re-run the analysis without a lot of work&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;are your simulation results reproducible?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;reuse of code (others&amp;rsquo; and your own) rather than starting from scratch every time&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;make methods accessible to (and used by) others&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are my current thoughts about the topics to include in such a course.  The key aim would be to make students aware of the basic principles and issues: to give them a good base from which to learn on their own.  Homework would include interesting and realistic programming assignments plus create a Sweave-type document and an R package.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Basic unix tools (find; df; top; ps ux; grep); unix on Mac and windows&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Emacs/vim/other editors (rstudio/eclipse)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Latex (for papers; for presentations)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;slides for talks; posters; figures/tables&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Advanced R (fancy data structures; functions; object-oriented stuff)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Advanced R graphics&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;R packages&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sweave/asciidoc/knitr&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;minimal Perl (or Python or Ruby); example of data manipulation&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Minimal C (or C++); examples of speed-up&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;version control (eg git or mercurial); backups&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;reproducible research ideas&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;data management&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;managing projects: data, analyses, results, papers&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;programming style (readable, modular); general but not too general&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;debugging/profiling/testing&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;high-throughput computing; parallel computing; managing big jobs&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;finding answers to questions: man pages; documentation; web&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;more on visualization; dynamic graphics&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;making a web page; html &amp;amp; css; simple cgi-type web forms?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;writing and managing email&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;managing references to journal articles&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
